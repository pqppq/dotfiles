{
	"required_providers": {
		"prefix": "required_providers",
		"body": [
			"terraform {",
			"	required_providers {",
			"		aws = {",
			"			source = \"hashicorp/aws\"",
			"			version = \"~> 5.0\"",
			"		}",
			"	}",
			"",
			"	#	backend \"s3\" {",
			"	#		bucket = \"bucket name\"",
			"	#		key = \"path/to/my/key\"",
			"	#		region = \"\"",
			"	#}",
			"}"
		]
	},
	"aws": {
		"prefix": "aws",
		"body": [
			"provider \"aws\" {",
			"	region = $1",
			"}"
		]
	},
	"var": {
		"prefix": "var",
		"body": [
			"variable \"$1\" {",
			"	type = $2",
			"	value = $3",
			"	default = $3",
			"	description = $4",
			"}"
		]
	},
	"out": {
		"prefix": "out",
		"body": [
			"output \"$1\" {",
			"	value = $2",
			"	description = $3",
			"}"
		]
	},
	"api_gateway_account": {
		"prefix": "api_gateway_account",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_account",
			"resource \"aws_api_gateway_account\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"api_gateway_api_key": {
		"prefix": "api_gateway_api_key",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_api_key",
			"resource \"aws_api_gateway_api_key\" \"example\" {",
			"  name = \"example\"",
			"}"
		]
	},
	"api_gateway_authorizer": {
		"prefix": "api_gateway_authorizer",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_authorizer",
			"resource \"aws_api_gateway_authorizer\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"api_gateway_base_path_mapping": {
		"prefix": "api_gateway_base_path_mapping",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_base_path_mapping",
			"resource \"aws_api_gateway_base_path_mapping\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"api_gateway_client_certificate": {
		"prefix": "api_gateway_client_certificate",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_client_certificate",
			"resource \"aws_api_gateway_client_certificate\" \"demo\" {",
			"  description = \"My client certificate\"",
			"}"
		]
	},
	"api_gateway_deployment": {
		"prefix": "api_gateway_deployment",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_deployment",
			"resource \"aws_api_gateway_deployment\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"api_gateway_documentation_part": {
		"prefix": "api_gateway_documentation_part",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_documentation_part",
			"resource \"aws_api_gateway_documentation_part\" \"example\" {",
			"  location {",
			"    type   = \"METHOD\"",
			"    method = \"GET\"",
			"    path   = \"/example\"",
			"  }",
			"",
			"  properties  = \"{\"description\":\"Example description\"}\"",
			"  rest_api_id = aws_api_gateway_rest_api.example.id",
			"}",
			"",
			"resource \"aws_api_gateway_rest_api\" \"example\" {",
			"  name = \"example_api\"",
			"}"
		]
	},
	"api_gateway_documentation_version": {
		"prefix": "api_gateway_documentation_version",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_documentation_version",
			"resource \"aws_api_gateway_documentation_version\" \"example\" {",
			"  version     = \"example_version\"",
			"  rest_api_id = aws_api_gateway_rest_api.example.id",
			"  description = \"Example description\"",
			"  depends_on  = [aws_api_gateway_documentation_part.example]",
			"}",
			"",
			"resource \"aws_api_gateway_rest_api\" \"example\" {",
			"  name = \"example_api\"",
			"}",
			"",
			"resource \"aws_api_gateway_documentation_part\" \"example\" {",
			"  location {",
			"    type = \"API\"",
			"  }",
			"",
			"  properties  = \"{\"description\":\"Example\"}\"",
			"  rest_api_id = aws_api_gateway_rest_api.example.id",
			"}"
		]
	},
	"api_gateway_domain_name": {
		"prefix": "api_gateway_domain_name",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_domain_name",
			"resource \"aws_api_gateway_domain_name\" \"example\" {",
			"  certificate_arn = aws_acm_certificate_validation.example.certificate_arn",
			"  domain_name     = \"api.example.com\"",
			"}",
			"",
			"# Example DNS record using Route53.",
			"# Route53 is not specifically required; any DNS host can be used.",
			"resource \"aws_route53_record\" \"example\" {",
			"  name    = aws_api_gateway_domain_name.example.domain_name",
			"  type    = \"A\"",
			"  zone_id = aws_route53_zone.example.id",
			"",
			"  alias {",
			"    evaluate_target_health = true",
			"    name                   = aws_api_gateway_domain_name.example.cloudfront_domain_name",
			"    zone_id                = aws_api_gateway_domain_name.example.cloudfront_zone_id",
			"  }",
			"}"
		]
	},
	"api_gateway_gateway_response": {
		"prefix": "api_gateway_gateway_response",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_gateway_response",
			"resource \"aws_api_gateway_rest_api\" \"main\" {",
			"  name = \"MyDemoAPI\"",
			"}",
			"",
			"resource \"aws_api_gateway_gateway_response\" \"test\" {",
			"  rest_api_id   = aws_api_gateway_rest_api.main.id",
			"  status_code   = \"401\"",
			"  response_type = \"UNAUTHORIZED\"",
			"",
			"  response_templates = {",
			"    \"application/json\" = \"{\"message\":$context.error.messageString}\"",
			"  }",
			"",
			"  response_parameters = {",
			"    \"gatewayresponse.header.Authorization\" = \"'Basic'\"",
			"  }",
			"}"
		]
	},
	"api_gateway_integration": {
		"prefix": "api_gateway_integration",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_integration",
			"resource \"aws_api_gateway_integration\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"api_gateway_integration_response": {
		"prefix": "api_gateway_integration_response",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_integration_response",
			"resource \"aws_api_gateway_integration_response\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"api_gateway_method": {
		"prefix": "api_gateway_method",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",
			"resource \"aws_api_gateway_rest_api\" \"MyDemoAPI\" {",
			"  name        = \"MyDemoAPI\"",
			"  description = \"This is my API for demonstration purposes\"",
			"}",
			"",
			"resource \"aws_api_gateway_resource\" \"MyDemoResource\" {",
			"  rest_api_id = aws_api_gateway_rest_api.MyDemoAPI.id",
			"  parent_id   = aws_api_gateway_rest_api.MyDemoAPI.root_resource_id",
			"  path_part   = \"mydemoresource\"",
			"}",
			"",
			"resource \"aws_api_gateway_method\" \"MyDemoMethod\" {",
			"  rest_api_id   = aws_api_gateway_rest_api.MyDemoAPI.id",
			"  resource_id   = aws_api_gateway_resource.MyDemoResource.id",
			"  http_method   = \"GET\"",
			"  authorization = \"NONE\"",
			"}"
		]
	},
	"api_gateway_method_response": {
		"prefix": "api_gateway_method_response",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method_response",
			"resource \"aws_api_gateway_method_response\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"api_gateway_method_settings": {
		"prefix": "api_gateway_method_settings",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method_settings",
			"resource \"aws_api_gateway_method_settings\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"api_gateway_model": {
		"prefix": "api_gateway_model",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_model",
			"resource \"aws_api_gateway_rest_api\" \"MyDemoAPI\" {",
			"  name        = \"MyDemoAPI\"",
			"  description = \"This is my API for demonstration purposes\"",
			"}",
			"",
			"resource \"aws_api_gateway_model\" \"MyDemoModel\" {",
			"  rest_api_id  = aws_api_gateway_rest_api.MyDemoAPI.id",
			"  name         = \"user\"",
			"  description  = \"a JSON schema\"",
			"  content_type = \"application/json\"",
			"",
			"  schema = jsonencode({",
			"    type = \"object\"",
			"  })",
			"}"
		]
	},
	"api_gateway_request_validator": {
		"prefix": "api_gateway_request_validator",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_request_validator",
			"resource \"aws_api_gateway_request_validator\" \"example\" {",
			"  name                        = \"example\"",
			"  rest_api_id                 = aws_api_gateway_rest_api.example.id",
			"  validate_request_body       = true",
			"  validate_request_parameters = true",
			"}"
		]
	},
	"api_gateway_resource": {
		"prefix": "api_gateway_resource",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_resource",
			"resource \"aws_api_gateway_rest_api\" \"MyDemoAPI\" {",
			"  name        = \"MyDemoAPI\"",
			"  description = \"This is my API for demonstration purposes\"",
			"}",
			"",
			"resource \"aws_api_gateway_resource\" \"MyDemoResource\" {",
			"  rest_api_id = aws_api_gateway_rest_api.MyDemoAPI.id",
			"  parent_id   = aws_api_gateway_rest_api.MyDemoAPI.root_resource_id",
			"  path_part   = \"mydemoresource\"",
			"}"
		]
	},
	"api_gateway_rest_api": {
		"prefix": "api_gateway_rest_api",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api",
			"resource \"aws_api_gateway_rest_api\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"api_gateway_rest_api_policy": {
		"prefix": "api_gateway_rest_api_policy",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api_policy",
			"resource \"aws_api_gateway_rest_api_policy\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"api_gateway_stage": {
		"prefix": "api_gateway_stage",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_stage",
			"resource \"aws_api_gateway_stage\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"api_gateway_usage_plan": {
		"prefix": "api_gateway_usage_plan",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_usage_plan",
			"resource \"aws_api_gateway_usage_plan\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"api_gateway_usage_plan_key": {
		"prefix": "api_gateway_usage_plan_key",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_usage_plan_key",
			"resource \"aws_api_gateway_usage_plan_key\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"api_gateway_vpc_link": {
		"prefix": "api_gateway_vpc_link",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_vpc_link",
			"resource \"aws_lb\" \"example\" {",
			"  name               = \"example\"",
			"  internal           = true",
			"  load_balancer_type = \"network\"",
			"",
			"  subnet_mapping {",
			"    subnet_id = \"12345\"",
			"  }",
			"}",
			"",
			"resource \"aws_api_gateway_vpc_link\" \"example\" {",
			"  name        = \"example\"",
			"  description = \"example description\"",
			"  target_arns = [aws_lb.example.arn]",
			"}"
		]
	},
	"apigatewayv2_api": {
		"prefix": "apigatewayv2_api",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/apigatewayv2_api",
			"resource \"aws_apigatewayv2_api\" \"example\" {",
			"  name                       = \"example-websocket-api\"",
			"  protocol_type              = \"WEBSOCKET\"",
			"  route_selection_expression = \"$request.body.action\"",
			"}"
		]
	},
	"apigatewayv2_api_mapping": {
		"prefix": "apigatewayv2_api_mapping",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/apigatewayv2_api_mapping",
			"resource \"aws_apigatewayv2_api_mapping\" \"example\" {",
			"  api_id      = aws_apigatewayv2_api.example.id",
			"  domain_name = aws_apigatewayv2_domain_name.example.id",
			"  stage       = aws_apigatewayv2_stage.example.id",
			"}"
		]
	},
	"apigatewayv2_authorizer": {
		"prefix": "apigatewayv2_authorizer",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/apigatewayv2_authorizer",
			"resource \"aws_apigatewayv2_authorizer\" \"example\" {",
			"  api_id           = aws_apigatewayv2_api.example.id",
			"  authorizer_type  = \"REQUEST\"",
			"  authorizer_uri   = aws_lambda_function.example.invoke_arn",
			"  identity_sources = [\"route.request.header.Auth\"]",
			"  name             = \"example-authorizer\"",
			"}"
		]
	},
	"apigatewayv2_deployment": {
		"prefix": "apigatewayv2_deployment",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/apigatewayv2_deployment",
			"resource \"aws_apigatewayv2_deployment\" \"example\" {",
			"  api_id      = aws_apigatewayv2_api.example.id",
			"  description = \"Example deployment\"",
			"",
			"  lifecycle {",
			"    create_before_destroy = true",
			"  }",
			"}"
		]
	},
	"apigatewayv2_domain_name": {
		"prefix": "apigatewayv2_domain_name",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/apigatewayv2_domain_name",
			"resource \"aws_apigatewayv2_domain_name\" \"example\" {",
			"  domain_name = \"ws-api.example.com\"",
			"",
			"  domain_name_configuration {",
			"    certificate_arn = aws_acm_certificate.example.arn",
			"    endpoint_type   = \"REGIONAL\"",
			"    security_policy = \"TLS_1_2\"",
			"  }",
			"}"
		]
	},
	"apigatewayv2_integration": {
		"prefix": "apigatewayv2_integration",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/apigatewayv2_integration",
			"resource \"aws_apigatewayv2_integration\" \"example\" {",
			"  api_id           = aws_apigatewayv2_api.example.id",
			"  integration_type = \"MOCK\"",
			"}"
		]
	},
	"apigatewayv2_integration_response": {
		"prefix": "apigatewayv2_integration_response",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/apigatewayv2_integration_response",
			"resource \"aws_apigatewayv2_integration_response\" \"example\" {",
			"  api_id                   = aws_apigatewayv2_api.example.id",
			"  integration_id           = aws_apigatewayv2_integration.example.id",
			"  integration_response_key = \"/200/\"",
			"}"
		]
	},
	"apigatewayv2_model": {
		"prefix": "apigatewayv2_model",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/apigatewayv2_model",
			"resource \"aws_apigatewayv2_model\" \"example\" {",
			"  api_id       = aws_apigatewayv2_api.example.id",
			"  content_type = \"application/json\"",
			"  name         = \"example\"",
			"",
			"  schema = jsonencode({",
			"    \"$schema\" = \"http://json-schema.org/draft-04/schema#\"",
			"    title     = \"ExampleModel\"",
			"    type      = \"object\"",
			"",
			"    properties = {",
			"      id = {",
			"        type = \"string\"",
			"      }",
			"    }",
			"  })",
			"}"
		]
	},
	"apigatewayv2_route": {
		"prefix": "apigatewayv2_route",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/apigatewayv2_route",
			"resource \"aws_apigatewayv2_api\" \"example\" {",
			"  name                       = \"example-websocket-api\"",
			"  protocol_type              = \"WEBSOCKET\"",
			"  route_selection_expression = \"$request.body.action\"",
			"}",
			"",
			"resource \"aws_apigatewayv2_route\" \"example\" {",
			"  api_id    = aws_apigatewayv2_api.example.id",
			"  route_key = \"$default\"",
			"}"
		]
	},
	"apigatewayv2_route_response": {
		"prefix": "apigatewayv2_route_response",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/apigatewayv2_route_response",
			"resource \"aws_apigatewayv2_route_response\" \"example\" {",
			"  api_id             = aws_apigatewayv2_api.example.id",
			"  route_id           = aws_apigatewayv2_route.example.id",
			"  route_response_key = \"$default\"",
			"}"
		]
	},
	"apigatewayv2_stage": {
		"prefix": "apigatewayv2_stage",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/apigatewayv2_stage",
			"resource \"aws_apigatewayv2_stage\" \"example\" {",
			"  api_id = aws_apigatewayv2_api.example.id",
			"  name   = \"example-stage\"",
			"}"
		]
	},
	"apigatewayv2_vpc_link": {
		"prefix": "apigatewayv2_vpc_link",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/apigatewayv2_vpc_link",
			"resource \"aws_apigatewayv2_vpc_link\" \"example\" {",
			"  name               = \"example\"",
			"  security_group_ids = [data.aws_security_group.example.id]",
			"  subnet_ids         = data.aws_subnets.example.ids",
			"",
			"  tags = {",
			"    Usage = \"example\"",
			"  }",
			"}"
		]
	},
	"batch_compute_environment": {
		"prefix": "batch_compute_environment",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/batch_compute_environment",
			"resource \"aws_batch_compute_environment\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"batch_job_definition": {
		"prefix": "batch_job_definition",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/batch_job_definition",
			"resource \"aws_batch_job_definition\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"batch_job_queue": {
		"prefix": "batch_job_queue",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/batch_job_queue",
			"resource \"aws_batch_job_queue\" \"test_queue\" {",
			"  name     = \"tf-test-batch-job-queue\"",
			"  state    = \"ENABLED\"",
			"  priority = 1",
			"  compute_environments = [",
			"    aws_batch_compute_environment.test_environment_1.arn,",
			"    aws_batch_compute_environment.test_environment_2.arn,",
			"  ]",
			"}"
		]
	},
	"batch_scheduling_policy": {
		"prefix": "batch_scheduling_policy",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/batch_scheduling_policy",
			"resource \"aws_batch_scheduling_policy\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"cloudfront_cache_policy": {
		"prefix": "cloudfront_cache_policy",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudfront_cache_policy",
			"resource \"aws_cloudfront_cache_policy\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"cloudfront_continuous_deployment_policy": {
		"prefix": "cloudfront_continuous_deployment_policy",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudfront_continuous_deployment_policy",
			"resource \"aws_cloudfront_continuous_deployment_policy\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"cloudfront_distribution": {
		"prefix": "cloudfront_distribution",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudfront_distribution",
			"resource \"aws_cloudfront_distribution\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"cloudfront_field_level_encryption_config": {
		"prefix": "cloudfront_field_level_encryption_config",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudfront_field_level_encryption_config",
			"resource \"aws_cloudfront_field_level_encryption_config\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"cloudfront_field_level_encryption_profile": {
		"prefix": "cloudfront_field_level_encryption_profile",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudfront_field_level_encryption_profile",
			"resource \"aws_cloudfront_field_level_encryption_profile\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"cloudfront_function": {
		"prefix": "cloudfront_function",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudfront_function",
			"resource \"aws_cloudfront_function\" \"test\" {",
			"  name    = \"test\"",
			"  runtime = \"cloudfront-js-1.0\"",
			"  comment = \"my function\"",
			"  publish = true",
			"  code    = file(\"${path.module}/function.js\")",
			"}"
		]
	},
	"cloudfront_key_group": {
		"prefix": "cloudfront_key_group",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudfront_key_group",
			"resource \"aws_cloudfront_public_key\" \"example\" {",
			"  comment     = \"example public key\"",
			"  encoded_key = file(\"public_key.pem\")",
			"  name        = \"example-key\"",
			"}",
			"",
			"resource \"aws_cloudfront_key_group\" \"example\" {",
			"  comment = \"example key group\"",
			"  items   = [aws_cloudfront_public_key.example.id]",
			"  name    = \"example-key-group\"",
			"}"
		]
	},
	"cloudfront_monitoring_subscription": {
		"prefix": "cloudfront_monitoring_subscription",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudfront_monitoring_subscription",
			"resource \"aws_cloudfront_monitoring_subscription\" \"example\" {",
			"  distribution_id = aws_cloudfront_distribution.example.id",
			"",
			"  monitoring_subscription {",
			"    realtime_metrics_subscription_config {",
			"      realtime_metrics_subscription_status = \"Enabled\"",
			"    }",
			"  }",
			"}"
		]
	},
	"cloudfront_origin_access_control": {
		"prefix": "cloudfront_origin_access_control",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudfront_origin_access_control",
			"resource \"aws_cloudfront_origin_access_control\" \"example\" {",
			"  name                              = \"example\"",
			"  description                       = \"Example Policy\"",
			"  origin_access_control_origin_type = \"s3\"",
			"  signing_behavior                  = \"always\"",
			"  signing_protocol                  = \"sigv4\"",
			"}"
		]
	},
	"cloudfront_origin_access_identity": {
		"prefix": "cloudfront_origin_access_identity",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudfront_origin_access_identity",
			"resource \"aws_cloudfront_origin_access_identity\" \"example\" {",
			"  comment = \"Some comment\"",
			"}"
		]
	},
	"cloudfront_origin_request_policy": {
		"prefix": "cloudfront_origin_request_policy",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudfront_origin_request_policy",
			"resource \"aws_cloudfront_origin_request_policy\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"cloudfront_public_key": {
		"prefix": "cloudfront_public_key",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudfront_public_key",
			"resource \"aws_cloudfront_public_key\" \"example\" {",
			"  comment     = \"test public key\"",
			"  encoded_key = file(\"public_key.pem\")",
			"  name        = \"test_key\"",
			"}"
		]
	},
	"cloudfront_realtime_log_config": {
		"prefix": "cloudfront_realtime_log_config",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudfront_realtime_log_config",
			"resource \"aws_cloudfront_realtime_log_config\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"cloudfront_response_headers_policy": {
		"prefix": "cloudfront_response_headers_policy",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudfront_response_headers_policy",
			"resource \"aws_cloudfront_response_headers_policy\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"cloudwatch_composite_alarm": {
		"prefix": "cloudwatch_composite_alarm",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudwatch_composite_alarm",
			"resource \"aws_cloudwatch_composite_alarm\" \"example\" {",
			"  alarm_description = \"This is a composite alarm!\"",
			"  alarm_name        = \"example-composite-alarm\"",
			"",
			"  alarm_actions = aws_sns_topic.example.arn",
			"  ok_actions    = aws_sns_topic.example.arn",
			"",
			"  alarm_rule = <<EOF",
			"ALARM(${aws_cloudwatch_metric_alarm.alpha.alarm_name}) OR",
			"ALARM(${aws_cloudwatch_metric_alarm.bravo.alarm_name})",
			"EOF",
			"",
			"  actions_suppressor {",
			"    alarm            = \"suppressor-alarm\"",
			"    extension_period = 10",
			"    wait_period      = 20",
			"  }",
			"}"
		]
	},
	"cloudwatch_dashboard": {
		"prefix": "cloudwatch_dashboard",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudwatch_dashboard",
			"resource \"aws_cloudwatch_dashboard\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"cloudwatch_event_api_destination": {
		"prefix": "cloudwatch_event_api_destination",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudwatch_event_api_destination",
			"resource \"aws_cloudwatch_event_api_destination\" \"test\" {",
			"  name                             = \"api-destination\"",
			"  description                      = \"An API Destination\"",
			"  invocation_endpoint              = \"https://api.destination.com/endpoint\"",
			"  http_method                      = \"POST\"",
			"  invocation_rate_limit_per_second = 20",
			"  connection_arn                   = aws_cloudwatch_event_connection.test.arn",
			"}"
		]
	},
	"cloudwatch_event_archive": {
		"prefix": "cloudwatch_event_archive",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudwatch_event_archive",
			"resource \"aws_cloudwatch_event_bus\" \"order\" {",
			"  name = \"orders\"",
			"}",
			"",
			"resource \"aws_cloudwatch_event_archive\" \"order\" {",
			"  name             = \"order-archive\"",
			"  event_source_arn = aws_cloudwatch_event_bus.order.arn",
			"}"
		]
	},
	"cloudwatch_event_bus": {
		"prefix": "cloudwatch_event_bus",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudwatch_event_bus",
			"resource \"aws_cloudwatch_event_bus\" \"messenger\" {",
			"  name = \"chat-messages\"",
			"}"
		]
	},
	"cloudwatch_event_bus_policy": {
		"prefix": "cloudwatch_event_bus_policy",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudwatch_event_bus_policy",
			"resource \"aws_cloudwatch_event_bus_policy\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"cloudwatch_event_connection": {
		"prefix": "cloudwatch_event_connection",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudwatch_event_connection",
			"resource \"aws_cloudwatch_event_connection\" \"test\" {",
			"  name               = \"ngrok-connection\"",
			"  description        = \"A connection description\"",
			"  authorization_type = \"API_KEY\"",
			"",
			"  auth_parameters {",
			"    api_key {",
			"      key   = \"x-signature\"",
			"      value = \"1234\"",
			"    }",
			"  }",
			"}"
		]
	},
	"cloudwatch_event_endpoint": {
		"prefix": "cloudwatch_event_endpoint",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudwatch_event_endpoint",
			"resource \"aws_cloudwatch_event_endpoint\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"cloudwatch_event_permission": {
		"prefix": "cloudwatch_event_permission",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudwatch_event_permission",
			"resource \"aws_cloudwatch_event_permission\" \"DevAccountAccess\" {",
			"  principal    = \"123456789012\"",
			"  statement_id = \"DevAccountAccess\"",
			"}"
		]
	},
	"cloudwatch_event_rule": {
		"prefix": "cloudwatch_event_rule",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudwatch_event_rule",
			"resource \"aws_cloudwatch_event_rule\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"cloudwatch_event_target": {
		"prefix": "cloudwatch_event_target",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudwatch_event_target",
			"resource \"aws_cloudwatch_event_target\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"cloudwatch_log_data_protection_policy": {
		"prefix": "cloudwatch_log_data_protection_policy",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudwatch_log_data_protection_policy",
			"resource \"aws_cloudwatch_log_data_protection_policy\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"cloudwatch_log_destination": {
		"prefix": "cloudwatch_log_destination",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudwatch_log_destination",
			"resource \"aws_cloudwatch_log_destination\" \"test_destination\" {",
			"  name       = \"test_destination\"",
			"  role_arn   = aws_iam_role.iam_for_cloudwatch.arn",
			"  target_arn = aws_kinesis_stream.kinesis_for_cloudwatch.arn",
			"}"
		]
	},
	"cloudwatch_log_destination_policy": {
		"prefix": "cloudwatch_log_destination_policy",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudwatch_log_destination_policy",
			"resource \"aws_cloudwatch_log_destination_policy\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"cloudwatch_log_group": {
		"prefix": "cloudwatch_log_group",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudwatch_log_group",
			"resource \"aws_cloudwatch_log_group\" \"yada\" {",
			"  name = \"Yada\"",
			"",
			"  tags = {",
			"    Environment = \"production\"",
			"    Application = \"serviceA\"",
			"  }",
			"}"
		]
	},
	"cloudwatch_log_metric_filter": {
		"prefix": "cloudwatch_log_metric_filter",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudwatch_log_metric_filter",
			"resource \"aws_cloudwatch_log_metric_filter\" \"yada\" {",
			"  name           = \"MyAppAccessCount\"",
			"  pattern        = \"\"",
			"  log_group_name = aws_cloudwatch_log_group.dada.name",
			"",
			"  metric_transformation {",
			"    name      = \"EventCount\"",
			"    namespace = \"YourNamespace\"",
			"    value     = \"1\"",
			"  }",
			"}",
			"",
			"resource \"aws_cloudwatch_log_group\" \"dada\" {",
			"  name = \"MyApp/access.log\"",
			"}"
		]
	},
	"cloudwatch_log_resource_policy": {
		"prefix": "cloudwatch_log_resource_policy",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudwatch_log_resource_policy",
			"resource \"aws_cloudwatch_log_resource_policy\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"cloudwatch_log_stream": {
		"prefix": "cloudwatch_log_stream",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudwatch_log_stream",
			"resource \"aws_cloudwatch_log_group\" \"yada\" {",
			"  name = \"Yada\"",
			"}",
			"",
			"resource \"aws_cloudwatch_log_stream\" \"foo\" {",
			"  name           = \"SampleLogStream1234\"",
			"  log_group_name = aws_cloudwatch_log_group.yada.name",
			"}"
		]
	},
	"cloudwatch_log_subscription_filter": {
		"prefix": "cloudwatch_log_subscription_filter",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudwatch_log_subscription_filter",
			"resource \"aws_cloudwatch_log_subscription_filter\" \"test_lambdafunction_logfilter\" {",
			"  name            = \"test_lambdafunction_logfilter\"",
			"  role_arn        = aws_iam_role.iam_for_lambda.arn",
			"  log_group_name  = \"/aws/lambda/example_lambda_name\"",
			"  filter_pattern  = \"logtype test\"",
			"  destination_arn = aws_kinesis_stream.test_logstream.arn",
			"  distribution    = \"Random\"",
			"}"
		]
	},
	"cloudwatch_metric_alarm": {
		"prefix": "cloudwatch_metric_alarm",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudwatch_metric_alarm",
			"resource \"aws_cloudwatch_metric_alarm\" \"foobar\" {",
			"  alarm_name                = \"terraform-test-foobar5\"",
			"  comparison_operator       = \"GreaterThanOrEqualToThreshold\"",
			"  evaluation_periods        = 2",
			"  metric_name               = \"CPUUtilization\"",
			"  namespace                 = \"AWS/EC2\"",
			"  period                    = 120",
			"  statistic                 = \"Average\"",
			"  threshold                 = 80",
			"  alarm_description         = \"This metric monitors ec2 cpu utilization\"",
			"  insufficient_data_actions = []",
			"}"
		]
	},
	"cloudwatch_metric_stream": {
		"prefix": "cloudwatch_metric_stream",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudwatch_metric_stream",
			"resource \"aws_cloudwatch_metric_stream\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"cloudwatch_query_definition": {
		"prefix": "cloudwatch_query_definition",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudwatch_query_definition",
			"resource \"aws_cloudwatch_query_definition\" \"example\" {",
			"  name = \"custom_query\"",
			"",
			"  log_group_names = [",
			"    \"/aws/logGroup1\",",
			"    \"/aws/logGroup2\"",
			"  ]",
			"",
			"  query_string = <<EOF",
			"fields @timestamp, @message",
			"| sort @timestamp desc",
			"| limit 25",
			"EOF",
			"}"
		]
	},
	"codeartifact_domain": {
		"prefix": "codeartifact_domain",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/codeartifact_domain",
			"resource \"aws_codeartifact_domain\" \"example\" {",
			"  domain = \"example\"",
			"}"
		]
	},
	"codeartifact_domain_permissions_policy": {
		"prefix": "codeartifact_domain_permissions_policy",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/codeartifact_domain_permissions_policy",
			"resource \"aws_codeartifact_domain_permissions_policy\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"codeartifact_repository": {
		"prefix": "codeartifact_repository",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/codeartifact_repository",
			"resource \"aws_kms_key\" \"example\" {",
			"  description = \"domain key\"",
			"}",
			"",
			"resource \"aws_codeartifact_domain\" \"example\" {",
			"  domain         = \"example\"",
			"  encryption_key = aws_kms_key.example.arn",
			"}",
			"",
			"resource \"aws_codeartifact_repository\" \"test\" {",
			"  repository = \"example\"",
			"  domain     = aws_codeartifact_domain.example.domain",
			"}"
		]
	},
	"codeartifact_repository_permissions_policy": {
		"prefix": "codeartifact_repository_permissions_policy",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/codeartifact_repository_permissions_policy",
			"resource \"aws_codeartifact_repository_permissions_policy\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"codebuild_project": {
		"prefix": "codebuild_project",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/codebuild_project",
			"resource \"aws_codebuild_project\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"codebuild_report_group": {
		"prefix": "codebuild_report_group",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/codebuild_report_group",
			"resource \"aws_codebuild_report_group\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"codebuild_resource_policy": {
		"prefix": "codebuild_resource_policy",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/codebuild_resource_policy",
			"resource \"aws_codebuild_resource_policy\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"codebuild_source_credential": {
		"prefix": "codebuild_source_credential",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/codebuild_source_credential",
			"resource \"aws_codebuild_source_credential\" \"example\" {",
			"  auth_type   = \"PERSONAL_ACCESS_TOKEN\"",
			"  server_type = \"GITHUB\"",
			"  token       = \"example\"",
			"}"
		]
	},
	"codebuild_webhook": {
		"prefix": "codebuild_webhook",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/codebuild_webhook",
			"resource \"aws_codebuild_webhook\" \"example\" {",
			"  project_name = aws_codebuild_project.example.name",
			"  build_type   = \"BUILD\"",
			"  filter_group {",
			"    filter {",
			"      type    = \"EVENT\"",
			"      pattern = \"PUSH\"",
			"    }",
			"",
			"    filter {",
			"      type    = \"BASE_REF\"",
			"      pattern = \"master\"",
			"    }",
			"  }",
			"}"
		]
	},
	"codecatalyst_dev_environment": {
		"prefix": "codecatalyst_dev_environment",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/codecatalyst_dev_environment",
			"resource \"aws_codecatalyst_dev_environment\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"codecatalyst_project": {
		"prefix": "codecatalyst_project",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/codecatalyst_project",
			"resource \"aws_codecatalyst_project\" \"test\" {",
			"  space_name   = \"myproject\"",
			"  display_name = \"MyProject\"",
			"  description  = \"My CodeCatalyst Project created using Terraform\"",
			"}"
		]
	},
	"codecatalyst_source_repository": {
		"prefix": "codecatalyst_source_repository",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/codecatalyst_source_repository",
			"resource \"aws_codecatalyst_source_repository\" \"example\" {",
			"  name         = \"example-repo\"",
			"  project_name = \"example-project\"",
			"  space_name   = \"example-space\"",
			"}"
		]
	},
	"codecommit_approval_rule_template": {
		"prefix": "codecommit_approval_rule_template",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/codecommit_approval_rule_template",
			"resource \"aws_codecommit_approval_rule_template\" \"example\" {",
			"  name        = \"MyExampleApprovalRuleTemplate\"",
			"  description = \"This is an example approval rule template\"",
			"",
			"  content = jsonencode({",
			"    Version               = \"2018-11-08\"",
			"    DestinationReferences = [\"refs/heads/master\"]",
			"    Statements = [{",
			"      Type                    = \"Approvers\"",
			"      NumberOfApprovalsNeeded = 2",
			"      ApprovalPoolMembers     = [\"arn:aws:sts::123456789012:assumed-role/CodeCommitReview/*\"]",
			"    }]",
			"  })",
			"}"
		]
	},
	"codecommit_approval_rule_template_association": {
		"prefix": "codecommit_approval_rule_template_association",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/codecommit_approval_rule_template_association",
			"resource \"aws_codecommit_approval_rule_template_association\" \"example\" {",
			"  approval_rule_template_name = aws_codecommit_approval_rule_template.example.name",
			"  repository_name             = aws_codecommit_repository.example.repository_name",
			"}"
		]
	},
	"codecommit_repository": {
		"prefix": "codecommit_repository",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/codecommit_repository",
			"resource \"aws_codecommit_repository\" \"test\" {",
			"  repository_name = \"MyTestRepository\"",
			"  description     = \"This is the Sample App Repository\"",
			"}"
		]
	},
	"codecommit_trigger": {
		"prefix": "codecommit_trigger",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/codecommit_trigger",
			"resource \"aws_codecommit_repository\" \"test\" {",
			"  repository_name = \"test\"",
			"}",
			"",
			"resource \"aws_codecommit_trigger\" \"test\" {",
			"  repository_name = aws_codecommit_repository.test.repository_name",
			"",
			"  trigger {",
			"    name            = \"all\"",
			"    events          = [\"all\"]",
			"    destination_arn = aws_sns_topic.test.arn",
			"  }",
			"}"
		]
	},
	"codedeploy_app": {
		"prefix": "codedeploy_app",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/codedeploy_app",
			"resource \"aws_codedeploy_app\" \"example\" {",
			"  compute_platform = \"ECS\"",
			"  name             = \"example\"",
			"}"
		]
	},
	"codedeploy_deployment_config": {
		"prefix": "codedeploy_deployment_config",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/codedeploy_deployment_config",
			"resource \"aws_codedeploy_deployment_config\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"codedeploy_deployment_group": {
		"prefix": "codedeploy_deployment_group",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/codedeploy_deployment_group",
			"resource \"aws_codedeploy_deployment_group\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"codegurureviewer_repository_association": {
		"prefix": "codegurureviewer_repository_association",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/codegurureviewer_repository_association",
			"resource \"aws_codegurureviewer_repository_association\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"codepipeline": {
		"prefix": "codepipeline",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/codepipeline",
			"resource \"aws_codepipeline\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"codepipeline_custom_action_type": {
		"prefix": "codepipeline_custom_action_type",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/codepipeline_custom_action_type",
			"resource \"aws_codepipeline_custom_action_type\" \"example\" {",
			"  category = \"Build\"",
			"",
			"  input_artifact_details {",
			"    maximum_count = 1",
			"    minimum_count = 0",
			"  }",
			"",
			"  output_artifact_details {",
			"    maximum_count = 1",
			"    minimum_count = 0",
			"  }",
			"",
			"  provider_name = \"example\"",
			"  version       = \"1\"",
			"}"
		]
	},
	"codepipeline_webhook": {
		"prefix": "codepipeline_webhook",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/codepipeline_webhook",
			"resource \"aws_codepipeline_webhook\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"codestarconnections_connection": {
		"prefix": "codestarconnections_connection",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/codestarconnections_connection",
			"resource \"aws_codestarconnections_connection\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"codestarconnections_host": {
		"prefix": "codestarconnections_host",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/codestarconnections_host",
			"resource \"aws_codestarconnections_host\" \"example\" {",
			"  name              = \"example-host\"",
			"  provider_endpoint = \"https://example.com\"",
			"  provider_type     = \"GitHubEnterpriseServer\"",
			"}"
		]
	},
	"codestarnotifications_notification_rule": {
		"prefix": "codestarnotifications_notification_rule",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/codestarnotifications_notification_rule",
			"resource \"aws_codestarnotifications_notification_rule\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"cognito_identity_pool": {
		"prefix": "cognito_identity_pool",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cognito_identity_pool",
			"resource \"aws_cognito_identity_pool\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"cognito_identity_pool_provider_principal_tag": {
		"prefix": "cognito_identity_pool_provider_principal_tag",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cognito_identity_pool_provider_principal_tag",
			"resource \"aws_cognito_identity_pool_provider_principal_tag\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"cognito_identity_pool_roles_attachment": {
		"prefix": "cognito_identity_pool_roles_attachment",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cognito_identity_pool_roles_attachment",
			"resource \"aws_cognito_identity_pool_roles_attachment\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"cognito_identity_provider": {
		"prefix": "cognito_identity_provider",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cognito_identity_provider",
			"resource \"aws_cognito_identity_provider\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"cognito_managed_user_pool_client": {
		"prefix": "cognito_managed_user_pool_client",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cognito_managed_user_pool_client",
			"resource \"aws_cognito_managed_user_pool_client\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"cognito_resource_server": {
		"prefix": "cognito_resource_server",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cognito_resource_server",
			"resource \"aws_cognito_user_pool\" \"pool\" {",
			"  name = \"pool\"",
			"}",
			"",
			"resource \"aws_cognito_resource_server\" \"resource\" {",
			"  identifier = \"https://example.com\"",
			"  name       = \"example\"",
			"",
			"  user_pool_id = aws_cognito_user_pool.pool.id",
			"}"
		]
	},
	"cognito_risk_configuration": {
		"prefix": "cognito_risk_configuration",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cognito_risk_configuration",
			"resource \"aws_cognito_risk_configuration\" \"example\" {",
			"  user_pool_id = aws_cognito_user_pool.example.id",
			"",
			"  risk_exception_configuration {",
			"    blocked_ip_range_list = [\"10.10.10.10/32\"]",
			"  }",
			"}"
		]
	},
	"cognito_user": {
		"prefix": "cognito_user",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cognito_user",
			"resource \"aws_cognito_user_pool\" \"example\" {",
			"  name = \"MyExamplePool\"",
			"}",
			"",
			"resource \"aws_cognito_user\" \"example\" {",
			"  user_pool_id = aws_cognito_user_pool.example.id",
			"  username     = \"example\"",
			"}"
		]
	},
	"cognito_user_group": {
		"prefix": "cognito_user_group",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cognito_user_group",
			"resource \"aws_cognito_user_group\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"cognito_user_in_group": {
		"prefix": "cognito_user_in_group",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cognito_user_in_group",
			"resource \"aws_cognito_user_in_group\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"cognito_user_pool": {
		"prefix": "cognito_user_pool",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cognito_user_pool",
			"resource \"aws_cognito_user_pool\" \"pool\" {",
			"  name = \"mypool\"",
			"}"
		]
	},
	"cognito_user_pool_client": {
		"prefix": "cognito_user_pool_client",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cognito_user_pool_client",
			"resource \"aws_cognito_user_pool_client\" \"client\" {",
			"  name = \"client\"",
			"",
			"  user_pool_id = aws_cognito_user_pool.pool.id",
			"}",
			"",
			"resource \"aws_cognito_user_pool\" \"pool\" {",
			"  name = \"pool\"",
			"}"
		]
	},
	"cognito_user_pool_domain": {
		"prefix": "cognito_user_pool_domain",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cognito_user_pool_domain",
			"resource \"aws_cognito_user_pool_domain\" \"main\" {",
			"  domain       = \"example-domain\"",
			"  user_pool_id = aws_cognito_user_pool.example.id",
			"}",
			"",
			"resource \"aws_cognito_user_pool\" \"example\" {",
			"  name = \"example-pool\"",
			"}"
		]
	},
	"cognito_user_pool_ui_customization": {
		"prefix": "cognito_user_pool_ui_customization",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cognito_user_pool_ui_customization",
			"resource \"aws_cognito_user_pool_ui_customization\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"db_cluster_snapshot": {
		"prefix": "db_cluster_snapshot",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_cluster_snapshot",
			"resource \"aws_db_cluster_snapshot\" \"example\" {",
			"  db_cluster_identifier          = aws_rds_cluster.example.id",
			"  db_cluster_snapshot_identifier = \"resourcetestsnapshot1234\"",
			"}"
		]
	},
	"db_event_subscription": {
		"prefix": "db_event_subscription",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_event_subscription",
			"resource \"aws_db_event_subscription\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"db_instance": {
		"prefix": "db_instance",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance",
			"resource \"aws_db_instance\" \"default\" {",
			"  allocated_storage    = 10",
			"  db_name              = \"mydb\"",
			"  engine               = \"mysql\"",
			"  engine_version       = \"5.7\"",
			"  instance_class       = \"db.t3.micro\"",
			"  username             = \"foo\"",
			"  password             = \"foobarbaz\"",
			"  parameter_group_name = \"default.mysql5.7\"",
			"  skip_final_snapshot  = true",
			"}"
		]
	},
	"db_instance_automated_backups_replication": {
		"prefix": "db_instance_automated_backups_replication",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance_automated_backups_replication",
			"resource \"aws_db_instance_automated_backups_replication\" \"default\" {",
			"  source_db_instance_arn = \"arn:aws:rds:us-west-2:123456789012:db:mydatabase\"",
			"  retention_period       = 14",
			"}"
		]
	},
	"db_instance_role_association": {
		"prefix": "db_instance_role_association",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance_role_association",
			"resource \"aws_db_instance_role_association\" \"example\" {",
			"  db_instance_identifier = aws_db_instance.example.identifier",
			"  feature_name           = \"S3_INTEGRATION\"",
			"  role_arn               = aws_iam_role.example.arn",
			"}"
		]
	},
	"db_option_group": {
		"prefix": "db_option_group",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_option_group",
			"resource \"aws_db_option_group\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"db_parameter_group": {
		"prefix": "db_parameter_group",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_parameter_group",
			"resource \"aws_db_parameter_group\" \"default\" {",
			"  name   = \"rds-pg\"",
			"  family = \"mysql5.6\"",
			"",
			"  parameter {",
			"    name  = \"character_set_server\"",
			"    value = \"utf8\"",
			"  }",
			"",
			"  parameter {",
			"    name  = \"character_set_client\"",
			"    value = \"utf8\"",
			"  }",
			"}"
		]
	},
	"db_proxy": {
		"prefix": "db_proxy",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_proxy",
			"resource \"aws_db_proxy\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"db_proxy_default_target_group": {
		"prefix": "db_proxy_default_target_group",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_proxy_default_target_group",
			"resource \"aws_db_proxy_default_target_group\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"db_proxy_endpoint": {
		"prefix": "db_proxy_endpoint",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_proxy_endpoint",
			"resource \"aws_db_proxy_endpoint\" \"example\" {",
			"  db_proxy_name          = aws_db_proxy.test.name",
			"  db_proxy_endpoint_name = \"example\"",
			"  vpc_subnet_ids         = aws_subnet.test[*].id",
			"  target_role            = \"READ_ONLY\"",
			"}"
		]
	},
	"db_proxy_target": {
		"prefix": "db_proxy_target",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_proxy_target",
			"resource \"aws_db_proxy_target\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"db_snapshot": {
		"prefix": "db_snapshot",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_snapshot",
			"resource \"aws_db_instance\" \"bar\" {",
			"  allocated_storage = 10",
			"  engine            = \"mysql\"",
			"  engine_version    = \"5.6.21\"",
			"  instance_class    = \"db.t2.micro\"",
			"  db_name           = \"baz\"",
			"  password          = \"barbarbarbar\"",
			"  username          = \"foo\"",
			"",
			"  maintenance_window      = \"Fri:09:00-Fri:09:30\"",
			"  backup_retention_period = 0",
			"  parameter_group_name    = \"default.mysql5.6\"",
			"}",
			"",
			"resource \"aws_db_snapshot\" \"test\" {",
			"  db_instance_identifier = aws_db_instance.bar.identifier",
			"  db_snapshot_identifier = \"testsnapshot1234\"",
			"}"
		]
	},
	"db_snapshot_copy": {
		"prefix": "db_snapshot_copy",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_snapshot_copy",
			"resource \"aws_db_snapshot_copy\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"db_subnet_group": {
		"prefix": "db_subnet_group",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_subnet_group",
			"resource \"aws_db_subnet_group\" \"default\" {",
			"  name       = \"main\"",
			"  subnet_ids = [aws_subnet.frontend.id, aws_subnet.backend.id]",
			"",
			"  tags = {",
			"    Name = \"My DB subnet group\"",
			"  }",
			"}"
		]
	},
	"default_network_acl": {
		"prefix": "default_network_acl",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/default_network_acl",
			"resource \"aws_default_network_acl\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"default_route_table": {
		"prefix": "default_route_table",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/default_route_table",
			"resource \"aws_default_route_table\" \"example\" {",
			"  default_route_table_id = aws_vpc.example.default_route_table_id",
			"",
			"  route {",
			"    cidr_block = \"10.0.1.0/24\"",
			"    gateway_id = aws_internet_gateway.example.id",
			"  }",
			"",
			"  route {",
			"    ipv6_cidr_block        = \"::/0\"",
			"    egress_only_gateway_id = aws_egress_only_internet_gateway.example.id",
			"  }",
			"",
			"  tags = {",
			"    Name = \"example\"",
			"  }",
			"}"
		]
	},
	"default_security_group": {
		"prefix": "default_security_group",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/default_security_group",
			"resource \"aws_default_security_group\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"default_subnet": {
		"prefix": "default_subnet",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/default_subnet",
			"resource \"aws_default_subnet\" \"default_az1\" {",
			"  availability_zone = \"us-west-2a\"",
			"",
			"  tags = {",
			"    Name = \"Default subnet for us-west-2a\"",
			"  }",
			"}"
		]
	},
	"default_vpc": {
		"prefix": "default_vpc",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/default_vpc",
			"resource \"aws_default_vpc\" \"default\" {",
			"  tags = {",
			"    Name = \"Default VPC\"",
			"  }",
			"}"
		]
	},
	"default_vpc_dhcp_options": {
		"prefix": "default_vpc_dhcp_options",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/default_vpc_dhcp_options",
			"resource \"aws_default_vpc_dhcp_options\" \"default\" {",
			"  tags = {",
			"    Name = \"Default DHCP Option Set\"",
			"  }",
			"}"
		]
	},
	"dynamodb_contributor_insights": {
		"prefix": "dynamodb_contributor_insights",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/dynamodb_contributor_insights",
			"resource \"aws_dynamodb_contributor_insights\" \"test\" {",
			"  table_name = \"ExampleTableName\"",
			"}"
		]
	},
	"dynamodb_global_table": {
		"prefix": "dynamodb_global_table",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/dynamodb_global_table",
			"resource \"aws_dynamodb_global_table\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"dynamodb_kinesis_streaming_destination": {
		"prefix": "dynamodb_kinesis_streaming_destination",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/dynamodb_kinesis_streaming_destination",
			"resource \"aws_dynamodb_table\" \"example\" {",
			"  name     = \"orders\"",
			"  hash_key = \"id\"",
			"",
			"  attribute {",
			"    name = \"id\"",
			"    type = \"S\"",
			"  }",
			"}",
			"",
			"resource \"aws_kinesis_stream\" \"example\" {",
			"  name        = \"order_item_changes\"",
			"  shard_count = 1",
			"}",
			"",
			"resource \"aws_dynamodb_kinesis_streaming_destination\" \"example\" {",
			"  stream_arn = aws_kinesis_stream.example.arn",
			"  table_name = aws_dynamodb_table.example.name",
			"}"
		]
	},
	"dynamodb_table": {
		"prefix": "dynamodb_table",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/dynamodb_table",
			"resource \"aws_dynamodb_table\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"dynamodb_table_item": {
		"prefix": "dynamodb_table_item",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/dynamodb_table_item",
			"resource \"aws_dynamodb_table_item\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"dynamodb_table_replica": {
		"prefix": "dynamodb_table_replica",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/dynamodb_table_replica",
			"resource \"aws_dynamodb_table_replica\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"dynamodb_tag": {
		"prefix": "dynamodb_tag",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/dynamodb_tag",
			"resource \"aws_dynamodb_tag\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"ebs_default_kms_key": {
		"prefix": "ebs_default_kms_key",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ebs_default_kms_key",
			"resource \"aws_ebs_default_kms_key\" \"example\" {",
			"  key_arn = aws_kms_key.example.arn",
			"}"
		]
	},
	"ebs_encryption_by_default": {
		"prefix": "ebs_encryption_by_default",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ebs_encryption_by_default",
			"resource \"aws_ebs_encryption_by_default\" \"example\" {",
			"  enabled = true",
			"}"
		]
	},
	"ebs_snapshot": {
		"prefix": "ebs_snapshot",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ebs_snapshot",
			"resource \"aws_ebs_volume\" \"example\" {",
			"  availability_zone = \"us-west-2a\"",
			"  size              = 40",
			"",
			"  tags = {",
			"    Name = \"HelloWorld\"",
			"  }",
			"}",
			"",
			"resource \"aws_ebs_snapshot\" \"example_snapshot\" {",
			"  volume_id = aws_ebs_volume.example.id",
			"",
			"  tags = {",
			"    Name = \"HelloWorld_snap\"",
			"  }",
			"}"
		]
	},
	"ebs_snapshot_copy": {
		"prefix": "ebs_snapshot_copy",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ebs_snapshot_copy",
			"resource \"aws_ebs_snapshot_copy\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"ebs_snapshot_import": {
		"prefix": "ebs_snapshot_import",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ebs_snapshot_import",
			"resource \"aws_ebs_snapshot_import\" \"example\" {",
			"  disk_container {",
			"    format = \"VHD\"",
			"    user_bucket {",
			"      s3_bucket = \"disk-images\"",
			"      s3_key    = \"source.vhd\"",
			"    }",
			"  }",
			"",
			"  role_name = \"disk-image-import\"",
			"",
			"  tags = {",
			"    Name = \"HelloWorld\"",
			"  }",
			"}"
		]
	},
	"ebs_volume": {
		"prefix": "ebs_volume",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ebs_volume",
			"resource \"aws_ebs_volume\" \"example\" {",
			"  availability_zone = \"us-west-2a\"",
			"  size              = 40",
			"",
			"  tags = {",
			"    Name = \"HelloWorld\"",
			"  }",
			"}"
		]
	},
	"ec2_availability_zone_group": {
		"prefix": "ec2_availability_zone_group",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ec2_availability_zone_group",
			"resource \"aws_ec2_availability_zone_group\" \"example\" {",
			"  group_name    = \"us-west-2-lax-1\"",
			"  opt_in_status = \"opted-in\"",
			"}"
		]
	},
	"ec2_capacity_reservation": {
		"prefix": "ec2_capacity_reservation",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ec2_capacity_reservation",
			"resource \"aws_ec2_capacity_reservation\" \"default\" {",
			"  instance_type     = \"t2.micro\"",
			"  instance_platform = \"Linux/UNIX\"",
			"  availability_zone = \"eu-west-1a\"",
			"  instance_count    = 1",
			"}"
		]
	},
	"ec2_carrier_gateway": {
		"prefix": "ec2_carrier_gateway",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ec2_carrier_gateway",
			"resource \"aws_ec2_carrier_gateway\" \"example\" {",
			"  vpc_id = aws_vpc.example.id",
			"",
			"  tags = {",
			"    Name = \"example-carrier-gateway\"",
			"  }",
			"}"
		]
	},
	"ec2_client_vpn_authorization_rule": {
		"prefix": "ec2_client_vpn_authorization_rule",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ec2_client_vpn_authorization_rule",
			"resource \"aws_ec2_client_vpn_authorization_rule\" \"example\" {",
			"  client_vpn_endpoint_id = aws_ec2_client_vpn_endpoint.example.id",
			"  target_network_cidr    = aws_subnet.example.cidr_block",
			"  authorize_all_groups   = true",
			"}"
		]
	},
	"ec2_client_vpn_endpoint": {
		"prefix": "ec2_client_vpn_endpoint",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ec2_client_vpn_endpoint",
			"resource \"aws_ec2_client_vpn_endpoint\" \"example\" {",
			"  description            = \"terraform-clientvpn-example\"",
			"  server_certificate_arn = aws_acm_certificate.cert.arn",
			"  client_cidr_block      = \"10.0.0.0/16\"",
			"",
			"  authentication_options {",
			"    type                       = \"certificate-authentication\"",
			"    root_certificate_chain_arn = aws_acm_certificate.root_cert.arn",
			"  }",
			"",
			"  connection_log_options {",
			"    enabled               = true",
			"    cloudwatch_log_group  = aws_cloudwatch_log_group.lg.name",
			"    cloudwatch_log_stream = aws_cloudwatch_log_stream.ls.name",
			"  }",
			"}"
		]
	},
	"ec2_client_vpn_network_association": {
		"prefix": "ec2_client_vpn_network_association",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ec2_client_vpn_network_association",
			"resource \"aws_ec2_client_vpn_network_association\" \"example\" {",
			"  client_vpn_endpoint_id = aws_ec2_client_vpn_endpoint.example.id",
			"  subnet_id              = aws_subnet.example.id",
			"}"
		]
	},
	"ec2_client_vpn_route": {
		"prefix": "ec2_client_vpn_route",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ec2_client_vpn_route",
			"resource \"aws_ec2_client_vpn_route\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"ec2_fleet": {
		"prefix": "ec2_fleet",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ec2_fleet",
			"resource \"aws_ec2_fleet\" \"example\" {",
			"  launch_template_config {",
			"    launch_template_specification {",
			"      launch_template_id = aws_launch_template.example.id",
			"      version            = aws_launch_template.example.latest_version",
			"    }",
			"  }",
			"",
			"  target_capacity_specification {",
			"    default_target_capacity_type = \"spot\"",
			"    total_target_capacity        = 5",
			"  }",
			"}"
		]
	},
	"ec2_host": {
		"prefix": "ec2_host",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ec2_host",
			"# Create a new host with instance type of c5.18xlarge with Auto Placement",
			"# and Host Recovery enabled.",
			"resource \"aws_ec2_host\" \"test\" {",
			"  instance_type     = \"c5.18xlarge\"",
			"  availability_zone = \"us-west-2a\"",
			"  host_recovery     = \"on\"",
			"  auto_placement    = \"on\"",
			"}"
		]
	},
	"ec2_instance_connect_endpoint": {
		"prefix": "ec2_instance_connect_endpoint",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ec2_instance_connect_endpoint",
			"resource \"aws_ec2_instance_connect_endpoint\" \"example\" {",
			"  subnet_id = aws_subnet.example.id",
			"}"
		]
	},
	"ec2_instance_state": {
		"prefix": "ec2_instance_state",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ec2_instance_state",
			"resource \"aws_ec2_instance_state\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"ec2_local_gateway_route": {
		"prefix": "ec2_local_gateway_route",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ec2_local_gateway_route",
			"resource \"aws_ec2_local_gateway_route\" \"example\" {",
			"  destination_cidr_block                   = \"172.16.0.0/16\"",
			"  local_gateway_route_table_id             = data.aws_ec2_local_gateway_route_table.example.id",
			"  local_gateway_virtual_interface_group_id = data.aws_ec2_local_gateway_virtual_interface_group.example.id",
			"}"
		]
	},
	"ec2_local_gateway_route_table_vpc_association": {
		"prefix": "ec2_local_gateway_route_table_vpc_association",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ec2_local_gateway_route_table_vpc_association",
			"data \"aws_ec2_local_gateway_route_table\" \"example\" {",
			"  outpost_arn = \"arn:aws:outposts:us-west-2:123456789012:outpost/op-1234567890abcdef\"",
			"}",
			"",
			"resource \"aws_vpc\" \"example\" {",
			"  cidr_block = \"10.0.0.0/16\"",
			"}",
			"",
			"resource \"aws_ec2_local_gateway_route_table_vpc_association\" \"example\" {",
			"  local_gateway_route_table_id = data.aws_ec2_local_gateway_route_table.example.id",
			"  vpc_id                       = aws_vpc.example.id",
			"}"
		]
	},
	"ec2_managed_prefix_list": {
		"prefix": "ec2_managed_prefix_list",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ec2_managed_prefix_list",
			"resource \"aws_ec2_managed_prefix_list\" \"example\" {",
			"  name           = \"All VPC CIDR-s\"",
			"  address_family = \"IPv4\"",
			"  max_entries    = 5",
			"",
			"  entry {",
			"    cidr        = aws_vpc.example.cidr_block",
			"    description = \"Primary\"",
			"  }",
			"",
			"  entry {",
			"    cidr        = aws_vpc_ipv4_cidr_block_association.example.cidr_block",
			"    description = \"Secondary\"",
			"  }",
			"",
			"  tags = {",
			"    Env = \"live\"",
			"  }",
			"}"
		]
	},
	"ec2_managed_prefix_list_entry": {
		"prefix": "ec2_managed_prefix_list_entry",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ec2_managed_prefix_list_entry",
			"resource \"aws_ec2_managed_prefix_list\" \"example\" {",
			"  name           = \"All VPC CIDR-s\"",
			"  address_family = \"IPv4\"",
			"  max_entries    = 5",
			"",
			"  tags = {",
			"    Env = \"live\"",
			"  }",
			"}",
			"",
			"resource \"aws_ec2_managed_prefix_list_entry\" \"entry_1\" {",
			"  cidr           = aws_vpc.example.cidr_block",
			"  description    = \"Primary\"",
			"  prefix_list_id = aws_ec2_managed_prefix_list.example.id",
			"}"
		]
	},
	"ec2_network_insights_analysis": {
		"prefix": "ec2_network_insights_analysis",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ec2_network_insights_analysis",
			"resource \"aws_ec2_network_insights_path\" \"path\" {",
			"  source      = aws_network_interface.source.id",
			"  destination = aws_network_interface.destination.id",
			"  protocol    = \"tcp\"",
			"}",
			"",
			"resource \"aws_ec2_network_insights_analysis\" \"analysis\" {",
			"  network_insights_path_id = aws_ec2_network_insights_path.path.id",
			"}"
		]
	},
	"ec2_network_insights_path": {
		"prefix": "ec2_network_insights_path",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ec2_network_insights_path",
			"resource \"aws_ec2_network_insights_path\" \"test\" {",
			"  source      = aws_network_interface.source.id",
			"  destination = aws_network_interface.destination.id",
			"  protocol    = \"tcp\"",
			"}"
		]
	},
	"ec2_serial_console_access": {
		"prefix": "ec2_serial_console_access",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ec2_serial_console_access",
			"resource \"aws_ec2_serial_console_access\" \"example\" {",
			"  enabled = true",
			"}"
		]
	},
	"ec2_subnet_cidr_reservation": {
		"prefix": "ec2_subnet_cidr_reservation",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ec2_subnet_cidr_reservation",
			"resource \"aws_ec2_subnet_cidr_reservation\" \"example\" {",
			"  cidr_block       = \"10.0.0.16/28\"",
			"  reservation_type = \"prefix\"",
			"  subnet_id        = aws_subnet.example.id",
			"}"
		]
	},
	"ec2_tag": {
		"prefix": "ec2_tag",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ec2_tag",
			"resource \"aws_ec2_transit_gateway\" \"example\" {}",
			"",
			"resource \"aws_customer_gateway\" \"example\" {",
			"  bgp_asn    = 65000",
			"  ip_address = \"172.0.0.1\"",
			"  type       = \"ipsec.1\"",
			"}",
			"",
			"resource \"aws_vpn_connection\" \"example\" {",
			"  customer_gateway_id = aws_customer_gateway.example.id",
			"  transit_gateway_id  = aws_ec2_transit_gateway.example.id",
			"  type                = aws_customer_gateway.example.type",
			"}",
			"",
			"resource \"aws_ec2_tag\" \"example\" {",
			"  resource_id = aws_vpn_connection.example.transit_gateway_attachment_id",
			"  key         = \"Name\"",
			"  value       = \"Hello World\"",
			"}"
		]
	},
	"ec2_traffic_mirror_filter": {
		"prefix": "ec2_traffic_mirror_filter",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ec2_traffic_mirror_filter",
			"resource \"aws_ec2_traffic_mirror_filter\" \"foo\" {",
			"  description      = \"traffic mirror filter - terraform example\"",
			"  network_services = [\"amazon-dns\"]",
			"}"
		]
	},
	"ec2_traffic_mirror_filter_rule": {
		"prefix": "ec2_traffic_mirror_filter_rule",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ec2_traffic_mirror_filter_rule",
			"resource \"aws_ec2_traffic_mirror_filter_rule\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"ec2_traffic_mirror_session": {
		"prefix": "ec2_traffic_mirror_session",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ec2_traffic_mirror_session",
			"resource \"aws_ec2_traffic_mirror_filter\" \"filter\" {",
			"  description      = \"traffic mirror filter - terraform example\"",
			"  network_services = [\"amazon-dns\"]",
			"}",
			"",
			"resource \"aws_ec2_traffic_mirror_target\" \"target\" {",
			"  network_load_balancer_arn = aws_lb.lb.arn",
			"}",
			"",
			"resource \"aws_ec2_traffic_mirror_session\" \"session\" {",
			"  description              = \"traffic mirror session - terraform example\"",
			"  network_interface_id     = aws_instance.test.primary_network_interface_id",
			"  session_number           = 1",
			"  traffic_mirror_filter_id = aws_ec2_traffic_mirror_filter.filter.id",
			"  traffic_mirror_target_id = aws_ec2_traffic_mirror_target.target.id",
			"}"
		]
	},
	"ec2_traffic_mirror_target": {
		"prefix": "ec2_traffic_mirror_target",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ec2_traffic_mirror_target",
			"resource \"aws_ec2_traffic_mirror_target\" \"nlb\" {",
			"  description               = \"NLB target\"",
			"  network_load_balancer_arn = aws_lb.lb.arn",
			"}",
			"",
			"resource \"aws_ec2_traffic_mirror_target\" \"eni\" {",
			"  description          = \"ENI target\"",
			"  network_interface_id = aws_instance.test.primary_network_interface_id",
			"}",
			"",
			"resource \"aws_ec2_traffic_mirror_target\" \"gwlb\" {",
			"  description                       = \"GWLB target\"",
			"  gateway_load_balancer_endpoint_id = aws_vpc_endpoint.example.id",
			"}"
		]
	},
	"ec2_transit_gateway": {
		"prefix": "ec2_transit_gateway",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ec2_transit_gateway",
			"resource \"aws_ec2_transit_gateway\" \"example\" {",
			"  description = \"example\"",
			"}"
		]
	},
	"ec2_transit_gateway_connect": {
		"prefix": "ec2_transit_gateway_connect",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ec2_transit_gateway_connect",
			"resource \"aws_ec2_transit_gateway_vpc_attachment\" \"example\" {",
			"  subnet_ids         = [aws_subnet.example.id]",
			"  transit_gateway_id = aws_ec2_transit_gateway.example.id",
			"  vpc_id             = aws_vpc.example.id",
			"}",
			"",
			"resource \"aws_ec2_transit_gateway_connect\" \"attachment\" {",
			"  transport_attachment_id = aws_ec2_transit_gateway_vpc_attachment.example.id",
			"  transit_gateway_id      = aws_ec2_transit_gateway.example.id",
			"}"
		]
	},
	"ec2_transit_gateway_connect_peer": {
		"prefix": "ec2_transit_gateway_connect_peer",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ec2_transit_gateway_connect_peer",
			"resource \"aws_ec2_transit_gateway_connect\" \"example\" {",
			"  transport_attachment_id = aws_ec2_transit_gateway_vpc_attachment.example.id",
			"  transit_gateway_id      = aws_ec2_transit_gateway.example.id",
			"}",
			"",
			"resource \"aws_ec2_transit_gateway_connect_peer\" \"example\" {",
			"  peer_address                  = \"10.1.2.3\"",
			"  inside_cidr_blocks            = [\"169.254.100.0/29\"]",
			"  transit_gateway_attachment_id = aws_ec2_transit_gateway_connect.example.id",
			"}"
		]
	},
	"ec2_transit_gateway_multicast_domain": {
		"prefix": "ec2_transit_gateway_multicast_domain",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ec2_transit_gateway_multicast_domain",
			"resource \"aws_ec2_transit_gateway_multicast_domain\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"ec2_transit_gateway_multicast_domain_association": {
		"prefix": "ec2_transit_gateway_multicast_domain_association",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ec2_transit_gateway_multicast_domain_association",
			"resource \"aws_ec2_transit_gateway\" \"example\" {",
			"  multicast_support = \"enable\"",
			"}",
			"",
			"resource \"aws_ec2_transit_gateway_vpc_attachment\" \"example\" {",
			"  subnet_ids         = [aws_subnet.example.id]",
			"  transit_gateway_id = aws_ec2_transit_gateway.example.id",
			"  vpc_id             = aws_vpc.example.id",
			"}",
			"",
			"resource \"aws_ec2_transit_gateway_multicast_domain\" \"example\" {",
			"  transit_gateway_id = aws_ec2_transit_gateway.example.id",
			"}",
			"",
			"resource \"aws_ec2_transit_gateway_multicast_domain_association\" \"example\" {",
			"  subnet_id                           = aws_subnet.example.id",
			"  transit_gateway_attachment_id       = aws_ec2_transit_gateway_vpc_attachment.example.id",
			"  transit_gateway_multicast_domain_id = aws_ec2_transit_gateway_multicast_domain.example.id",
			"}"
		]
	},
	"ec2_transit_gateway_multicast_group_member": {
		"prefix": "ec2_transit_gateway_multicast_group_member",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ec2_transit_gateway_multicast_group_member",
			"resource \"aws_ec2_transit_gateway_multicast_group_member\" \"example\" {",
			"  group_ip_address                    = \"224.0.0.1\"",
			"  network_interface_id                = aws_network_interface.example.id",
			"  transit_gateway_multicast_domain_id = aws_ec2_transit_gateway_multicast_domain.example.id",
			"}"
		]
	},
	"ec2_transit_gateway_multicast_group_source": {
		"prefix": "ec2_transit_gateway_multicast_group_source",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ec2_transit_gateway_multicast_group_source",
			"resource \"aws_ec2_transit_gateway_multicast_group_source\" \"example\" {",
			"  group_ip_address                    = \"224.0.0.1\"",
			"  network_interface_id                = aws_network_interface.example.id",
			"  transit_gateway_multicast_domain_id = aws_ec2_transit_gateway_multicast_domain.example.id",
			"}"
		]
	},
	"ec2_transit_gateway_peering_attachment": {
		"prefix": "ec2_transit_gateway_peering_attachment",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ec2_transit_gateway_peering_attachment",
			"resource \"aws_ec2_transit_gateway_peering_attachment\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"ec2_transit_gateway_peering_attachment_accepter": {
		"prefix": "ec2_transit_gateway_peering_attachment_accepter",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ec2_transit_gateway_peering_attachment_accepter",
			"resource \"aws_ec2_transit_gateway_peering_attachment_accepter\" \"example\" {",
			"  transit_gateway_attachment_id = aws_ec2_transit_gateway_peering_attachment.example.id",
			"",
			"  tags = {",
			"    Name = \"Example cross-account attachment\"",
			"  }",
			"}"
		]
	},
	"ec2_transit_gateway_policy_table": {
		"prefix": "ec2_transit_gateway_policy_table",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ec2_transit_gateway_policy_table",
			"resource \"aws_ec2_transit_gateway_policy_table\" \"example\" {",
			"  transit_gateway_id = aws_ec2_transit_gateway.example.id",
			"",
			"  tags = {",
			"    Name = \"Example Policy Table\"",
			"  }",
			"}"
		]
	},
	"ec2_transit_gateway_policy_table_association": {
		"prefix": "ec2_transit_gateway_policy_table_association",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ec2_transit_gateway_policy_table_association",
			"resource \"aws_ec2_transit_gateway_policy_table_association\" \"example\" {",
			"  transit_gateway_attachment_id   = aws_networkmanager_transit_gateway_peering.example.transit_gateway_peering_attachment_id",
			"  transit_gateway_policy_table_id = aws_ec2_transit_gateway_policy_table.example.id",
			"}"
		]
	},
	"ec2_transit_gateway_prefix_list_reference": {
		"prefix": "ec2_transit_gateway_prefix_list_reference",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ec2_transit_gateway_prefix_list_reference",
			"resource \"aws_ec2_transit_gateway_prefix_list_reference\" \"example\" {",
			"  prefix_list_id                 = aws_ec2_managed_prefix_list.example.id",
			"  transit_gateway_attachment_id  = aws_ec2_transit_gateway_vpc_attachment.example.id",
			"  transit_gateway_route_table_id = aws_ec2_transit_gateway.example.association_default_route_table_id",
			"}"
		]
	},
	"ec2_transit_gateway_route": {
		"prefix": "ec2_transit_gateway_route",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ec2_transit_gateway_route",
			"resource \"aws_ec2_transit_gateway_route\" \"example\" {",
			"  destination_cidr_block         = \"0.0.0.0/0\"",
			"  transit_gateway_attachment_id  = aws_ec2_transit_gateway_vpc_attachment.example.id",
			"  transit_gateway_route_table_id = aws_ec2_transit_gateway.example.association_default_route_table_id",
			"}"
		]
	},
	"ec2_transit_gateway_route_table": {
		"prefix": "ec2_transit_gateway_route_table",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ec2_transit_gateway_route_table",
			"resource \"aws_ec2_transit_gateway_route_table\" \"example\" {",
			"  transit_gateway_id = aws_ec2_transit_gateway.example.id",
			"}"
		]
	},
	"ec2_transit_gateway_route_table_association": {
		"prefix": "ec2_transit_gateway_route_table_association",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ec2_transit_gateway_route_table_association",
			"resource \"aws_ec2_transit_gateway_route_table_association\" \"example\" {",
			"  transit_gateway_attachment_id  = aws_ec2_transit_gateway_vpc_attachment.example.id",
			"  transit_gateway_route_table_id = aws_ec2_transit_gateway_route_table.example.id",
			"}"
		]
	},
	"ec2_transit_gateway_route_table_propagation": {
		"prefix": "ec2_transit_gateway_route_table_propagation",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ec2_transit_gateway_route_table_propagation",
			"resource \"aws_ec2_transit_gateway_route_table_propagation\" \"example\" {",
			"  transit_gateway_attachment_id  = aws_ec2_transit_gateway_vpc_attachment.example.id",
			"  transit_gateway_route_table_id = aws_ec2_transit_gateway_route_table.example.id",
			"}"
		]
	},
	"ec2_transit_gateway_vpc_attachment": {
		"prefix": "ec2_transit_gateway_vpc_attachment",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ec2_transit_gateway_vpc_attachment",
			"resource \"aws_ec2_transit_gateway_vpc_attachment\" \"example\" {",
			"  subnet_ids         = [aws_subnet.example.id]",
			"  transit_gateway_id = aws_ec2_transit_gateway.example.id",
			"  vpc_id             = aws_vpc.example.id",
			"}"
		]
	},
	"ec2_transit_gateway_vpc_attachment_accepter": {
		"prefix": "ec2_transit_gateway_vpc_attachment_accepter",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ec2_transit_gateway_vpc_attachment_accepter",
			"resource \"aws_ec2_transit_gateway_vpc_attachment_accepter\" \"example\" {",
			"  transit_gateway_attachment_id = aws_ec2_transit_gateway_vpc_attachment.example.id",
			"",
			"  tags = {",
			"    Name = \"Example cross-account attachment\"",
			"  }",
			"}"
		]
	},
	"ecr_lifecycle_policy": {
		"prefix": "ecr_lifecycle_policy",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_lifecycle_policy",
			"resource \"aws_ecr_lifecycle_policy\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"ecr_pull_through_cache_rule": {
		"prefix": "ecr_pull_through_cache_rule",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_pull_through_cache_rule",
			"resource \"aws_ecr_pull_through_cache_rule\" \"example\" {",
			"  ecr_repository_prefix = \"ecr-public\"",
			"  upstream_registry_url = \"public.ecr.aws\"",
			"}"
		]
	},
	"ecr_registry_policy": {
		"prefix": "ecr_registry_policy",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_registry_policy",
			"resource \"aws_ecr_registry_policy\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"ecr_registry_scanning_configuration": {
		"prefix": "ecr_registry_scanning_configuration",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_registry_scanning_configuration",
			"resource \"aws_ecr_registry_scanning_configuration\" \"configuration\" {",
			"  scan_type = \"ENHANCED\"",
			"",
			"  rule {",
			"    scan_frequency = \"CONTINUOUS_SCAN\"",
			"    repository_filter {",
			"      filter      = \"example\"",
			"      filter_type = \"WILDCARD\"",
			"    }",
			"  }",
			"}"
		]
	},
	"ecr_replication_configuration": {
		"prefix": "ecr_replication_configuration",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_replication_configuration",
			"data \"aws_caller_identity\" \"current\" {}",
			"",
			"data \"aws_regions\" \"example\" {}",
			"",
			"resource \"aws_ecr_replication_configuration\" \"example\" {",
			"  replication_configuration {",
			"    rule {",
			"      destination {",
			"        region      = data.aws_regions.example.names[0]",
			"        registry_id = data.aws_caller_identity.current.account_id",
			"      }",
			"    }",
			"  }",
			"}"
		]
	},
	"ecr_repository": {
		"prefix": "ecr_repository",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository",
			"resource \"aws_ecr_repository\" \"foo\" {",
			"  name                 = \"bar\"",
			"  image_tag_mutability = \"MUTABLE\"",
			"",
			"  image_scanning_configuration {",
			"    scan_on_push = true",
			"  }",
			"}"
		]
	},
	"ecr_repository_policy": {
		"prefix": "ecr_repository_policy",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository_policy",
			"resource \"aws_ecr_repository_policy\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"ecrpublic_repository": {
		"prefix": "ecrpublic_repository",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecrpublic_repository",
			"resource \"aws_ecrpublic_repository\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"ecrpublic_repository_policy": {
		"prefix": "ecrpublic_repository_policy",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecrpublic_repository_policy",
			"resource \"aws_ecrpublic_repository_policy\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"ecs_account_setting_default": {
		"prefix": "ecs_account_setting_default",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecs_account_setting_default",
			"resource \"aws_ecs_account_setting_default\" \"test\" {",
			"  name  = \"taskLongArnFormat\"",
			"  value = \"enabled\"",
			"}"
		]
	},
	"ecs_capacity_provider": {
		"prefix": "ecs_capacity_provider",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecs_capacity_provider",
			"resource \"aws_ecs_capacity_provider\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"ecs_cluster": {
		"prefix": "ecs_cluster",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecs_cluster",
			"resource \"aws_ecs_cluster\" \"foo\" {",
			"  name = \"white-hart\"",
			"",
			"  setting {",
			"    name  = \"containerInsights\"",
			"    value = \"enabled\"",
			"  }",
			"}"
		]
	},
	"ecs_cluster_capacity_providers": {
		"prefix": "ecs_cluster_capacity_providers",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecs_cluster_capacity_providers",
			"resource \"aws_ecs_cluster\" \"example\" {",
			"  name = \"my-cluster\"",
			"}",
			"",
			"resource \"aws_ecs_cluster_capacity_providers\" \"example\" {",
			"  cluster_name = aws_ecs_cluster.example.name",
			"",
			"  capacity_providers = [\"FARGATE\"]",
			"",
			"  default_capacity_provider_strategy {",
			"    base              = 1",
			"    weight            = 100",
			"    capacity_provider = \"FARGATE\"",
			"  }",
			"}"
		]
	},
	"ecs_service": {
		"prefix": "ecs_service",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecs_service",
			"resource \"aws_ecs_service\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"ecs_tag": {
		"prefix": "ecs_tag",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecs_tag",
			"resource \"aws_batch_compute_environment\" \"example\" {",
			"  compute_environment_name = \"example\"",
			"  service_role             = aws_iam_role.example.arn",
			"  type                     = \"UNMANAGED\"",
			"}",
			"",
			"resource \"aws_ecs_tag\" \"example\" {",
			"  resource_arn = aws_batch_compute_environment.example.ecs_cluster_arn",
			"  key          = \"Name\"",
			"  value        = \"Hello World\"",
			"}"
		]
	},
	"ecs_task_definition": {
		"prefix": "ecs_task_definition",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecs_task_definition",
			"resource \"aws_ecs_task_definition\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"ecs_task_set": {
		"prefix": "ecs_task_set",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecs_task_set",
			"resource \"aws_ecs_task_set\" \"example\" {",
			"  service         = aws_ecs_service.example.id",
			"  cluster         = aws_ecs_cluster.example.id",
			"  task_definition = aws_ecs_task_definition.example.arn",
			"",
			"  load_balancer {",
			"    target_group_arn = aws_lb_target_group.example.arn",
			"    container_name   = \"mongo\"",
			"    container_port   = 8080",
			"  }",
			"}"
		]
	},
	"efs_access_point": {
		"prefix": "efs_access_point",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/efs_access_point",
			"resource \"aws_efs_access_point\" \"test\" {",
			"  file_system_id = aws_efs_file_system.foo.id",
			"}"
		]
	},
	"efs_backup_policy": {
		"prefix": "efs_backup_policy",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/efs_backup_policy",
			"resource \"aws_efs_file_system\" \"fs\" {",
			"  creation_token = \"my-product\"",
			"}",
			"",
			"resource \"aws_efs_backup_policy\" \"policy\" {",
			"  file_system_id = aws_efs_file_system.fs.id",
			"",
			"  backup_policy {",
			"    status = \"ENABLED\"",
			"  }",
			"}"
		]
	},
	"efs_file_system": {
		"prefix": "efs_file_system",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/efs_file_system",
			"resource \"aws_efs_file_system\" \"foo\" {",
			"  creation_token = \"my-product\"",
			"",
			"  tags = {",
			"    Name = \"MyProduct\"",
			"  }",
			"}"
		]
	},
	"efs_file_system_policy": {
		"prefix": "efs_file_system_policy",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/efs_file_system_policy",
			"resource \"aws_efs_file_system_policy\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"efs_mount_target": {
		"prefix": "efs_mount_target",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/efs_mount_target",
			"resource \"aws_efs_mount_target\" \"alpha\" {",
			"  file_system_id = aws_efs_file_system.foo.id",
			"  subnet_id      = aws_subnet.alpha.id",
			"}",
			"",
			"resource \"aws_vpc\" \"foo\" {",
			"  cidr_block = \"10.0.0.0/16\"",
			"}",
			"",
			"resource \"aws_subnet\" \"alpha\" {",
			"  vpc_id            = aws_vpc.foo.id",
			"  availability_zone = \"us-west-2a\"",
			"  cidr_block        = \"10.0.1.0/24\"",
			"}"
		]
	},
	"efs_replication_configuration": {
		"prefix": "efs_replication_configuration",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/efs_replication_configuration",
			"resource \"aws_efs_file_system\" \"example\" {}",
			"",
			"resource \"aws_efs_replication_configuration\" \"example\" {",
			"  source_file_system_id = aws_efs_file_system.example.id",
			"",
			"  destination {",
			"    region = \"us-west-2\"",
			"  }",
			"}"
		]
	},
	"eip": {
		"prefix": "eip",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/eip",
			"resource \"aws_eip\" \"lb\" {",
			"  instance = aws_instance.web.id",
			"  domain   = \"vpc\"",
			"}"
		]
	},
	"eip_association": {
		"prefix": "eip_association",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/eip_association",
			"resource \"aws_eip_association\" \"eip_assoc\" {",
			"  instance_id   = aws_instance.web.id",
			"  allocation_id = aws_eip.example.id",
			"}",
			"",
			"resource \"aws_instance\" \"web\" {",
			"  ami               = \"ami-21f78e11\"",
			"  availability_zone = \"us-west-2a\"",
			"  instance_type     = \"t2.micro\"",
			"",
			"  tags = {",
			"    Name = \"HelloWorld\"",
			"  }",
			"}",
			"",
			"resource \"aws_eip\" \"example\" {",
			"  domain = \"vpc\"",
			"}"
		]
	},
	"eks_addon": {
		"prefix": "eks_addon",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/eks_addon",
			"resource \"aws_eks_addon\" \"example\" {",
			"  cluster_name = aws_eks_cluster.example.name",
			"  addon_name   = \"vpc-cni\"",
			"}"
		]
	},
	"eks_cluster": {
		"prefix": "eks_cluster",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/eks_cluster",
			"resource \"aws_eks_cluster\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"eks_fargate_profile": {
		"prefix": "eks_fargate_profile",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/eks_fargate_profile",
			"resource \"aws_eks_fargate_profile\" \"example\" {",
			"  cluster_name           = aws_eks_cluster.example.name",
			"  fargate_profile_name   = \"example\"",
			"  pod_execution_role_arn = aws_iam_role.example.arn",
			"  subnet_ids             = aws_subnet.example[*].id",
			"",
			"  selector {",
			"    namespace = \"example\"",
			"  }",
			"}"
		]
	},
	"eks_identity_provider_config": {
		"prefix": "eks_identity_provider_config",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/eks_identity_provider_config",
			"resource \"aws_eks_identity_provider_config\" \"example\" {",
			"  cluster_name = aws_eks_cluster.example.name",
			"",
			"  oidc {",
			"    client_id                     = \"your client_id\"",
			"    identity_provider_config_name = \"example\"",
			"    issuer_url                    = \"your issuer_url\"",
			"  }",
			"}"
		]
	},
	"eks_node_group": {
		"prefix": "eks_node_group",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/eks_node_group",
			"resource \"aws_eks_node_group\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"elastic_beanstalk_application": {
		"prefix": "elastic_beanstalk_application",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elastic_beanstalk_application",
			"resource \"aws_elastic_beanstalk_application\" \"tftest\" {",
			"  name        = \"tf-test-name\"",
			"  description = \"tf-test-desc\"",
			"",
			"  appversion_lifecycle {",
			"    service_role          = aws_iam_role.beanstalk_service.arn",
			"    max_count             = 128",
			"    delete_source_from_s3 = true",
			"  }",
			"}"
		]
	},
	"elastic_beanstalk_application_version": {
		"prefix": "elastic_beanstalk_application_version",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elastic_beanstalk_application_version",
			"resource \"aws_elastic_beanstalk_application_version\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"elastic_beanstalk_configuration_template": {
		"prefix": "elastic_beanstalk_configuration_template",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elastic_beanstalk_configuration_template",
			"resource \"aws_elastic_beanstalk_application\" \"tftest\" {",
			"  name        = \"tf-test-name\"",
			"  description = \"tf-test-desc\"",
			"}",
			"",
			"resource \"aws_elastic_beanstalk_configuration_template\" \"tf_template\" {",
			"  name                = \"tf-test-template-config\"",
			"  application         = aws_elastic_beanstalk_application.tftest.name",
			"  solution_stack_name = \"64bit Amazon Linux 2015.09 v2.0.8 running Go 1.4\"",
			"}"
		]
	},
	"elastic_beanstalk_environment": {
		"prefix": "elastic_beanstalk_environment",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elastic_beanstalk_environment",
			"resource \"aws_elastic_beanstalk_application\" \"tftest\" {",
			"  name        = \"tf-test-name\"",
			"  description = \"tf-test-desc\"",
			"}",
			"",
			"resource \"aws_elastic_beanstalk_environment\" \"tfenvtest\" {",
			"  name                = \"tf-test-name\"",
			"  application         = aws_elastic_beanstalk_application.tftest.name",
			"  solution_stack_name = \"64bit Amazon Linux 2015.03 v2.0.3 running Go 1.4\"",
			"}"
		]
	},
	"elasticache_cluster": {
		"prefix": "elasticache_cluster",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticache_cluster",
			"resource \"aws_elasticache_cluster\" \"example\" {",
			"  cluster_id           = \"cluster-example\"",
			"  engine               = \"memcached\"",
			"  node_type            = \"cache.m4.large\"",
			"  num_cache_nodes      = 2",
			"  parameter_group_name = \"default.memcached1.4\"",
			"  port                 = 11211",
			"}"
		]
	},
	"elasticache_global_replication_group": {
		"prefix": "elasticache_global_replication_group",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticache_global_replication_group",
			"resource \"aws_elasticache_global_replication_group\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"elasticache_parameter_group": {
		"prefix": "elasticache_parameter_group",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticache_parameter_group",
			"resource \"aws_elasticache_parameter_group\" \"default\" {",
			"  name   = \"cache-params\"",
			"  family = \"redis2.8\"",
			"",
			"  parameter {",
			"    name  = \"activerehashing\"",
			"    value = \"yes\"",
			"  }",
			"",
			"  parameter {",
			"    name  = \"min-slaves-to-write\"",
			"    value = \"2\"",
			"  }",
			"}"
		]
	},
	"elasticache_replication_group": {
		"prefix": "elasticache_replication_group",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticache_replication_group",
			"resource \"aws_elasticache_replication_group\" \"example\" {",
			"  automatic_failover_enabled  = true",
			"  preferred_cache_cluster_azs = [\"us-west-2a\", \"us-west-2b\"]",
			"  replication_group_id        = \"tf-rep-group-1\"",
			"  description                 = \"example description\"",
			"  node_type                   = \"cache.m4.large\"",
			"  num_cache_clusters          = 2",
			"  parameter_group_name        = \"default.redis3.2\"",
			"  port                        = 6379",
			"}"
		]
	},
	"elasticache_subnet_group": {
		"prefix": "elasticache_subnet_group",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticache_subnet_group",
			"resource \"aws_elasticache_subnet_group\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"elasticache_user": {
		"prefix": "elasticache_user",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticache_user",
			"resource \"aws_elasticache_user\" \"test\" {",
			"  user_id       = \"testUserId\"",
			"  user_name     = \"testUserName\"",
			"  access_string = \"on ~app::* -@all +@read +@hash +@bitmap +@geo -setbit -bitfield -hset -hsetnx -hmset -hincrby -hincrbyfloat -hdel -bitop -geoadd -georadius -georadiusbymember\"",
			"  engine        = \"REDIS\"",
			"  passwords     = [\"password123456789\"]",
			"}"
		]
	},
	"elasticache_user_group": {
		"prefix": "elasticache_user_group",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticache_user_group",
			"resource \"aws_elasticache_user\" \"test\" {",
			"  user_id       = \"testUserId\"",
			"  user_name     = \"default\"",
			"  access_string = \"on ~app::* -@all +@read +@hash +@bitmap +@geo -setbit -bitfield -hset -hsetnx -hmset -hincrby -hincrbyfloat -hdel -bitop -geoadd -georadius -georadiusbymember\"",
			"  engine        = \"REDIS\"",
			"  passwords     = [\"password123456789\"]",
			"}",
			"",
			"resource \"aws_elasticache_user_group\" \"test\" {",
			"  engine        = \"REDIS\"",
			"  user_group_id = \"userGroupId\"",
			"  user_ids      = [aws_elasticache_user.test.user_id]",
			"}"
		]
	},
	"elasticache_user_group_association": {
		"prefix": "elasticache_user_group_association",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticache_user_group_association",
			"resource \"aws_elasticache_user_group_association\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"elasticsearch_domain": {
		"prefix": "elasticsearch_domain",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticsearch_domain",
			"resource \"aws_elasticsearch_domain\" \"example\" {",
			"  domain_name           = \"example\"",
			"  elasticsearch_version = \"7.10\"",
			"",
			"  cluster_config {",
			"    instance_type = \"r4.large.elasticsearch\"",
			"  }",
			"",
			"  tags = {",
			"    Domain = \"TestDomain\"",
			"  }",
			"}"
		]
	},
	"elasticsearch_domain_policy": {
		"prefix": "elasticsearch_domain_policy",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticsearch_domain_policy",
			"resource \"aws_elasticsearch_domain_policy\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"elasticsearch_domain_saml_options": {
		"prefix": "elasticsearch_domain_saml_options",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticsearch_domain_saml_options",
			"resource \"aws_elasticsearch_domain_saml_options\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"elastictranscoder_pipeline": {
		"prefix": "elastictranscoder_pipeline",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elastictranscoder_pipeline",
			"resource \"aws_elastictranscoder_pipeline\" \"bar\" {",
			"  input_bucket = aws_s3_bucket.input_bucket.id",
			"  name         = \"aws_elastictranscoder_pipeline_tf_test_\"",
			"  role         = aws_iam_role.test_role.arn",
			"",
			"  content_config {",
			"    bucket        = aws_s3_bucket.content_bucket.id",
			"    storage_class = \"Standard\"",
			"  }",
			"",
			"  thumbnail_config {",
			"    bucket        = aws_s3_bucket.thumb_bucket.id",
			"    storage_class = \"Standard\"",
			"  }",
			"}"
		]
	},
	"elastictranscoder_preset": {
		"prefix": "elastictranscoder_preset",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elastictranscoder_preset",
			"resource \"aws_elastictranscoder_preset\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"iam_access_key": {
		"prefix": "iam_access_key",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_access_key",
			"resource \"aws_iam_access_key\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"iam_account_alias": {
		"prefix": "iam_account_alias",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_account_alias",
			"resource \"aws_iam_account_alias\" \"alias\" {",
			"  account_alias = \"my-account-alias\"",
			"}"
		]
	},
	"iam_account_password_policy": {
		"prefix": "iam_account_password_policy",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_account_password_policy",
			"resource \"aws_iam_account_password_policy\" \"strict\" {",
			"  minimum_password_length        = 8",
			"  require_lowercase_characters   = true",
			"  require_numbers                = true",
			"  require_uppercase_characters   = true",
			"  require_symbols                = true",
			"  allow_users_to_change_password = true",
			"}"
		]
	},
	"iam_group": {
		"prefix": "iam_group",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_group",
			"resource \"aws_iam_group\" \"developers\" {",
			"  name = \"developers\"",
			"  path = \"/users/\"",
			"}"
		]
	},
	"iam_group_membership": {
		"prefix": "iam_group_membership",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_group_membership",
			"resource \"aws_iam_group_membership\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"iam_group_policy": {
		"prefix": "iam_group_policy",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_group_policy",
			"resource \"aws_iam_group_policy\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"iam_group_policy_attachment": {
		"prefix": "iam_group_policy_attachment",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_group_policy_attachment",
			"resource \"aws_iam_group\" \"group\" {",
			"  name = \"test-group\"",
			"}",
			"",
			"resource \"aws_iam_policy\" \"policy\" {",
			"  name        = \"test-policy\"",
			"  description = \"A test policy\"",
			"  policy      = \"{ ... policy JSON ... }\"",
			"}",
			"",
			"resource \"aws_iam_group_policy_attachment\" \"test-attach\" {",
			"  group      = aws_iam_group.group.name",
			"  policy_arn = aws_iam_policy.policy.arn",
			"}"
		]
	},
	"iam_instance_profile": {
		"prefix": "iam_instance_profile",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_instance_profile",
			"resource \"aws_iam_instance_profile\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"iam_openid_connect_provider": {
		"prefix": "iam_openid_connect_provider",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_openid_connect_provider",
			"resource \"aws_iam_openid_connect_provider\" \"default\" {",
			"  url = \"https://accounts.google.com\"",
			"",
			"  client_id_list = [",
			"    \"266362248691-342342xasdasdasda-apps.googleusercontent.com\",",
			"  ]",
			"",
			"  thumbprint_list = [\"cf23df2207d99a74fbe169e3eba035e633b65d94\"]",
			"}"
		]
	},
	"iam_policy": {
		"prefix": "iam_policy",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_policy",
			"resource \"aws_iam_policy\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"iam_policy_attachment": {
		"prefix": "iam_policy_attachment",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_policy_attachment",
			"resource \"aws_iam_policy_attachment\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"iam_role": {
		"prefix": "iam_role",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_role",
			"resource \"aws_iam_role\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"iam_role_policy": {
		"prefix": "iam_role_policy",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_role_policy",
			"resource \"aws_iam_role_policy\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"iam_role_policy_attachment": {
		"prefix": "iam_role_policy_attachment",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_role_policy_attachment",
			"resource \"aws_iam_role_policy_attachment\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"iam_saml_provider": {
		"prefix": "iam_saml_provider",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_saml_provider",
			"resource \"aws_iam_saml_provider\" \"default\" {",
			"  name                   = \"myprovider\"",
			"  saml_metadata_document = file(\"saml-metadata.xml\")",
			"}"
		]
	},
	"iam_security_token_service_preferences": {
		"prefix": "iam_security_token_service_preferences",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_security_token_service_preferences",
			"resource \"aws_iam_security_token_service_preferences\" \"example\" {",
			"  global_endpoint_token_version = \"v2Token\"",
			"}"
		]
	},
	"iam_server_certificate": {
		"prefix": "iam_server_certificate",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_server_certificate",
			"resource \"aws_iam_server_certificate\" \"test_cert\" {",
			"  name             = \"some_test_cert\"",
			"  certificate_body = file(\"self-ca-cert.pem\")",
			"  private_key      = file(\"test-key.pem\")",
			"}"
		]
	},
	"iam_service_linked_role": {
		"prefix": "iam_service_linked_role",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_service_linked_role",
			"resource \"aws_iam_service_linked_role\" \"elasticbeanstalk\" {",
			"  aws_service_name = \"elasticbeanstalk.amazonaws.com\"",
			"}"
		]
	},
	"iam_service_specific_credential": {
		"prefix": "iam_service_specific_credential",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_service_specific_credential",
			"resource \"aws_iam_user\" \"example\" {",
			"  name = \"example\"",
			"}",
			"",
			"resource \"aws_iam_service_specific_credential\" \"example\" {",
			"  service_name = \"codecommit.amazonaws.com\"",
			"  user_name    = aws_iam_user.example.name",
			"}"
		]
	},
	"iam_signing_certificate": {
		"prefix": "iam_signing_certificate",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_signing_certificate",
			"resource \"aws_iam_signing_certificate\" \"test_cert\" {",
			"  username         = \"some_test_cert\"",
			"  certificate_body = file(\"self-ca-cert.pem\")",
			"}"
		]
	},
	"iam_user": {
		"prefix": "iam_user",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_user",
			"resource \"aws_iam_user\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"iam_user_group_membership": {
		"prefix": "iam_user_group_membership",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_user_group_membership",
			"resource \"aws_iam_user_group_membership\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"iam_user_login_profile": {
		"prefix": "iam_user_login_profile",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_user_login_profile",
			"resource \"aws_iam_user\" \"example\" {",
			"  name          = \"example\"",
			"  path          = \"/\"",
			"  force_destroy = true",
			"}",
			"",
			"resource \"aws_iam_user_login_profile\" \"example\" {",
			"  user    = aws_iam_user.example.name",
			"  pgp_key = \"keybase:some_person_that_exists\"",
			"}",
			"",
			"output \"password\" {",
			"  value = aws_iam_user_login_profile.example.encrypted_password",
			"}"
		]
	},
	"iam_user_policy": {
		"prefix": "iam_user_policy",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_user_policy",
			"resource \"aws_iam_user_policy\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"iam_user_policy_attachment": {
		"prefix": "iam_user_policy_attachment",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_user_policy_attachment",
			"resource \"aws_iam_user\" \"user\" {",
			"  name = \"test-user\"",
			"}",
			"",
			"resource \"aws_iam_policy\" \"policy\" {",
			"  name        = \"test-policy\"",
			"  description = \"A test policy\"",
			"  policy      = \"{ ... policy JSON ... }\"",
			"}",
			"",
			"resource \"aws_iam_user_policy_attachment\" \"test-attach\" {",
			"  user       = aws_iam_user.user.name",
			"  policy_arn = aws_iam_policy.policy.arn",
			"}"
		]
	},
	"iam_user_ssh_key": {
		"prefix": "iam_user_ssh_key",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_user_ssh_key",
			"resource \"aws_iam_user\" \"user\" {",
			"  name = \"test-user\"",
			"  path = \"/\"",
			"}",
			"",
			"resource \"aws_iam_user_ssh_key\" \"user\" {",
			"  username   = aws_iam_user.user.name",
			"  encoding   = \"SSH\"",
			"  public_key = \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQD3F6tyPEFEzV0LX3X8BsXdMsQz1x2cEikKDEY0aIj41qgxMCP/iteneqXSIFZBp5vizPvaoIR3Um9xK7PGoW8giupGn+EPuxIA4cDM4vzOqOkiMPhz5XK0whEjkVzTo4+S0puvDZuwIsdiW9mxhJc7tgBNL0cYlWSYVkz4G/fslNfRPW5mYAM49f4fhtxPb5ok4Q2Lg9dPKVHO/Bgeu5woMc7RY0p1ej6D4CKFE6lymSDJpW0YHX/wqE9+cfEauh7xZcG0q9t2ta6F6fmX0agvpFyZo8aFbXeUBr7osSCJNgvavWbM/06niWrOvYX2xwWdhXmXSrbX8ZbabVohBK41 mytest@mydomain.com\"",
			"}"
		]
	},
	"iam_virtual_mfa_device": {
		"prefix": "iam_virtual_mfa_device",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_virtual_mfa_device",
			"resource \"aws_iam_virtual_mfa_device\" \"example\" {",
			"  virtual_mfa_device_name = \"example\"",
			"}"
		]
	},
	"kms_alias": {
		"prefix": "kms_alias",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/kms_alias",
			"resource \"aws_kms_key\" \"a\" {}",
			"",
			"resource \"aws_kms_alias\" \"a\" {",
			"  name          = \"alias/my-key-alias\"",
			"  target_key_id = aws_kms_key.a.key_id",
			"}"
		]
	},
	"kms_ciphertext": {
		"prefix": "kms_ciphertext",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/kms_ciphertext",
			"resource \"aws_kms_key\" \"oauth_config\" {",
			"  description = \"oauth config\"",
			"  is_enabled  = true",
			"}",
			"",
			"resource \"aws_kms_ciphertext\" \"oauth\" {",
			"  key_id = aws_kms_key.oauth_config.key_id",
			"",
			"  plaintext = <<EOF",
			"{",
			"  \"client_id\": \"e587dbae22222f55da22\",",
			"  \"client_secret\": \"8289575d00000ace55e1815ec13673955721b8a5\"",
			"}",
			"EOF",
			"}"
		]
	},
	"kms_custom_key_store": {
		"prefix": "kms_custom_key_store",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/kms_custom_key_store",
			"resource \"aws_kms_custom_key_store\" \"test\" {",
			"  cloud_hsm_cluster_id  = var.cloud_hsm_cluster_id",
			"  custom_key_store_name = \"kms-custom-key-store-test\"",
			"  key_store_password    = \"noplaintextpasswords1\"",
			"",
			"  trust_anchor_certificate = file(\"anchor-certificate.crt\")",
			"}"
		]
	},
	"kms_external_key": {
		"prefix": "kms_external_key",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/kms_external_key",
			"resource \"aws_kms_external_key\" \"example\" {",
			"  description = \"KMS EXTERNAL for AMI encryption\"",
			"}"
		]
	},
	"kms_grant": {
		"prefix": "kms_grant",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/kms_grant",
			"resource \"aws_kms_grant\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"kms_key": {
		"prefix": "kms_key",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/kms_key",
			"resource \"aws_kms_key\" \"a\" {",
			"  description             = \"KMS key 1\"",
			"  deletion_window_in_days = 10",
			"}"
		]
	},
	"kms_key_policy": {
		"prefix": "kms_key_policy",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/kms_key_policy",
			"resource \"aws_kms_key_policy\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"kms_replica_external_key": {
		"prefix": "kms_replica_external_key",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/kms_replica_external_key",
			"resource \"aws_kms_replica_external_key\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"kms_replica_key": {
		"prefix": "kms_replica_key",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/kms_replica_key",
			"resource \"aws_kms_replica_key\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"lambda_alias": {
		"prefix": "lambda_alias",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lambda_alias",
			"resource \"aws_lambda_alias\" \"test_lambda_alias\" {",
			"  name             = \"my_alias\"",
			"  description      = \"a sample description\"",
			"  function_name    = aws_lambda_function.lambda_function_test.arn",
			"  function_version = \"1\"",
			"",
			"  routing_config {",
			"    additional_version_weights = {",
			"      \"2\" = 0.5",
			"    }",
			"  }",
			"}"
		]
	},
	"lambda_code_signing_config": {
		"prefix": "lambda_code_signing_config",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lambda_code_signing_config",
			"resource \"aws_lambda_code_signing_config\" \"new_csc\" {",
			"  allowed_publishers {",
			"    signing_profile_version_arns = [",
			"      aws_signer_signing_profile.example1.arn,",
			"      aws_signer_signing_profile.example2.arn,",
			"    ]",
			"  }",
			"",
			"  policies {",
			"    untrusted_artifact_on_deployment = \"Warn\"",
			"  }",
			"",
			"  description = \"My awesome code signing config.\"",
			"}"
		]
	},
	"lambda_event_source_mapping": {
		"prefix": "lambda_event_source_mapping",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lambda_event_source_mapping",
			"resource \"aws_lambda_event_source_mapping\" \"example\" {",
			"  event_source_arn  = aws_dynamodb_table.example.stream_arn",
			"  function_name     = aws_lambda_function.example.arn",
			"  starting_position = \"LATEST\"",
			"}"
		]
	},
	"lambda_function": {
		"prefix": "lambda_function",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lambda_function",
			"resource \"aws_lambda_function\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"lambda_function_event_invoke_config": {
		"prefix": "lambda_function_event_invoke_config",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lambda_function_event_invoke_config",
			"resource \"aws_lambda_function_event_invoke_config\" \"example\" {",
			"  function_name = aws_lambda_alias.example.function_name",
			"",
			"  destination_config {",
			"    on_failure {",
			"      destination = aws_sqs_queue.example.arn",
			"    }",
			"",
			"    on_success {",
			"      destination = aws_sns_topic.example.arn",
			"    }",
			"  }",
			"}"
		]
	},
	"lambda_function_url": {
		"prefix": "lambda_function_url",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lambda_function_url",
			"resource \"aws_lambda_function_url\" \"test_latest\" {",
			"  function_name      = aws_lambda_function.test.function_name",
			"  authorization_type = \"NONE\"",
			"}",
			"",
			"resource \"aws_lambda_function_url\" \"test_live\" {",
			"  function_name      = aws_lambda_function.test.function_name",
			"  qualifier          = \"my_alias\"",
			"  authorization_type = \"AWS_IAM\"",
			"",
			"  cors {",
			"    allow_credentials = true",
			"    allow_origins     = [\"*\"]",
			"    allow_methods     = [\"*\"]",
			"    allow_headers     = [\"date\", \"keep-alive\"]",
			"    expose_headers    = [\"keep-alive\", \"date\"]",
			"    max_age           = 86400",
			"  }",
			"}"
		]
	},
	"lambda_invocation": {
		"prefix": "lambda_invocation",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lambda_invocation",
			"resource \"aws_lambda_invocation\" \"example\" {",
			"  function_name = aws_lambda_function.lambda_function_test.function_name",
			"",
			"  input = jsonencode({",
			"    key1 = \"value1\"",
			"    key2 = \"value2\"",
			"  })",
			"}",
			"",
			"output \"result_entry\" {",
			"  value = jsondecode(aws_lambda_invocation.example.result)[\"key1\"]",
			"}"
		]
	},
	"lambda_layer_version": {
		"prefix": "lambda_layer_version",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lambda_layer_version",
			"resource \"aws_lambda_layer_version\" \"lambda_layer\" {",
			"  filename   = \"lambda_layer_payload.zip\"",
			"  layer_name = \"lambda_layer_name\"",
			"",
			"  compatible_runtimes = [\"nodejs16.x\"]",
			"}"
		]
	},
	"lambda_layer_version_permission": {
		"prefix": "lambda_layer_version_permission",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lambda_layer_version_permission",
			"resource \"aws_lambda_layer_version_permission\" \"lambda_layer_permission\" {",
			"  layer_name     = \"arn:aws:lambda:us-west-2:123456654321:layer:test_layer1\"",
			"  version_number = 1",
			"  principal      = \"111111111111\"",
			"  action         = \"lambda:GetLayerVersion\"",
			"  statement_id   = \"dev-account\"",
			"}"
		]
	},
	"lambda_permission": {
		"prefix": "lambda_permission",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lambda_permission",
			"resource \"aws_lambda_permission\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"lambda_provisioned_concurrency_config": {
		"prefix": "lambda_provisioned_concurrency_config",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lambda_provisioned_concurrency_config",
			"resource \"aws_lambda_provisioned_concurrency_config\" \"example\" {",
			"  function_name                     = aws_lambda_alias.example.function_name",
			"  provisioned_concurrent_executions = 1",
			"  qualifier                         = aws_lambda_alias.example.name",
			"}"
		]
	},
	"lb": {
		"prefix": "lb",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lb",
			"resource \"aws_lb\" \"test\" {",
			"  name               = \"test-lb-tf\"",
			"  internal           = false",
			"  load_balancer_type = \"application\"",
			"  security_groups    = [aws_security_group.lb_sg.id]",
			"  subnets            = [for subnet in aws_subnet.public : subnet.id]",
			"",
			"  enable_deletion_protection = true",
			"",
			"  access_logs {",
			"    bucket  = aws_s3_bucket.lb_logs.id",
			"    prefix  = \"test-lb\"",
			"    enabled = true",
			"  }",
			"",
			"  tags = {",
			"    Environment = \"production\"",
			"  }",
			"}"
		]
	},
	"lb_cookie_stickiness_policy": {
		"prefix": "lb_cookie_stickiness_policy",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lb_cookie_stickiness_policy",
			"resource \"aws_elb\" \"lb\" {",
			"  name               = \"test-lb\"",
			"  availability_zones = [\"us-east-1a\"]",
			"",
			"  listener {",
			"    instance_port     = 8000",
			"    instance_protocol = \"http\"",
			"    lb_port           = 80",
			"    lb_protocol       = \"http\"",
			"  }",
			"}",
			"",
			"resource \"aws_lb_cookie_stickiness_policy\" \"foo\" {",
			"  name                     = \"foo-policy\"",
			"  load_balancer            = aws_elb.lb.id",
			"  lb_port                  = 80",
			"  cookie_expiration_period = 600",
			"}"
		]
	},
	"lb_listener": {
		"prefix": "lb_listener",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lb_listener",
			"resource \"aws_lb_listener\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"lb_listener_certificate": {
		"prefix": "lb_listener_certificate",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lb_listener_certificate",
			"resource \"aws_acm_certificate\" \"example\" {",
			"  # ...",
			"}",
			"",
			"resource \"aws_lb\" \"front_end\" {",
			"  # ...",
			"}",
			"",
			"resource \"aws_lb_listener\" \"front_end\" {",
			"  # ...",
			"}",
			"",
			"resource \"aws_lb_listener_certificate\" \"example\" {",
			"  listener_arn    = aws_lb_listener.front_end.arn",
			"  certificate_arn = aws_acm_certificate.example.arn",
			"}"
		]
	},
	"lb_listener_rule": {
		"prefix": "lb_listener_rule",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lb_listener_rule",
			"resource \"aws_lb_listener_rule\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"lb_ssl_negotiation_policy": {
		"prefix": "lb_ssl_negotiation_policy",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lb_ssl_negotiation_policy",
			"resource \"aws_lb_ssl_negotiation_policy\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"lb_target_group": {
		"prefix": "lb_target_group",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lb_target_group",
			"resource \"aws_lb_target_group\" \"test\" {",
			"  name     = \"tf-example-lb-tg\"",
			"  port     = 80",
			"  protocol = \"HTTP\"",
			"  vpc_id   = aws_vpc.main.id",
			"}",
			"",
			"resource \"aws_vpc\" \"main\" {",
			"  cidr_block = \"10.0.0.0/16\"",
			"}"
		]
	},
	"lb_target_group_attachment": {
		"prefix": "lb_target_group_attachment",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lb_target_group_attachment",
			"resource \"aws_lb_target_group_attachment\" \"test\" {",
			"  target_group_arn = aws_lb_target_group.test.arn",
			"  target_id        = aws_instance.test.id",
			"  port             = 80",
			"}",
			"",
			"resource \"aws_lb_target_group\" \"test\" {",
			"  # ... other configuration ...",
			"}",
			"",
			"resource \"aws_instance\" \"test\" {",
			"  # ... other configuration ...",
			"}"
		]
	},
	"load_balancer_backend_server_policy": {
		"prefix": "load_balancer_backend_server_policy",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/load_balancer_backend_server_policy",
			"resource \"aws_load_balancer_backend_server_policy\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"load_balancer_listener_policy": {
		"prefix": "load_balancer_listener_policy",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/load_balancer_listener_policy",
			"resource \"aws_load_balancer_listener_policy\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"load_balancer_policy": {
		"prefix": "load_balancer_policy",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/load_balancer_policy",
			"resource \"aws_load_balancer_policy\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"memorydb_acl": {
		"prefix": "memorydb_acl",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/memorydb_acl",
			"resource \"aws_memorydb_acl\" \"example\" {",
			"  name       = \"my-acl\"",
			"  user_names = [\"my-user-1\", \"my-user-2\"]",
			"}"
		]
	},
	"memorydb_cluster": {
		"prefix": "memorydb_cluster",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/memorydb_cluster",
			"resource \"aws_memorydb_cluster\" \"example\" {",
			"  acl_name                 = \"open-access\"",
			"  name                     = \"my-cluster\"",
			"  node_type                = \"db.t4g.small\"",
			"  num_shards               = 2",
			"  security_group_ids       = [aws_security_group.example.id]",
			"  snapshot_retention_limit = 7",
			"  subnet_group_name        = aws_memorydb_subnet_group.example.id",
			"}"
		]
	},
	"memorydb_parameter_group": {
		"prefix": "memorydb_parameter_group",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/memorydb_parameter_group",
			"resource \"aws_memorydb_parameter_group\" \"example\" {",
			"  name   = \"my-parameter-group\"",
			"  family = \"memorydb_redis6\"",
			"",
			"  parameter {",
			"    name  = \"activedefrag\"",
			"    value = \"yes\"",
			"  }",
			"}"
		]
	},
	"memorydb_snapshot": {
		"prefix": "memorydb_snapshot",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/memorydb_snapshot",
			"resource \"aws_memorydb_snapshot\" \"example\" {",
			"  cluster_name = aws_memorydb_cluster.example.name",
			"  name         = \"my-snapshot\"",
			"}"
		]
	},
	"memorydb_subnet_group": {
		"prefix": "memorydb_subnet_group",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/memorydb_subnet_group",
			"resource \"aws_vpc\" \"example\" {",
			"  cidr_block = \"10.0.0.0/16\"",
			"}",
			"",
			"resource \"aws_subnet\" \"example\" {",
			"  vpc_id            = aws_vpc.example.id",
			"  cidr_block        = \"10.0.0.0/24\"",
			"  availability_zone = \"us-west-2a\"",
			"}",
			"",
			"resource \"aws_memorydb_subnet_group\" \"example\" {",
			"  name       = \"my-subnet-group\"",
			"  subnet_ids = [aws_subnet.example.id]",
			"}"
		]
	},
	"memorydb_user": {
		"prefix": "memorydb_user",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/memorydb_user",
			"resource \"random_password\" \"example\" {",
			"  length = 16",
			"}",
			"",
			"resource \"aws_memorydb_user\" \"example\" {",
			"  user_name     = \"my-user\"",
			"  access_string = \"on ~* &* +@all\"",
			"",
			"  authentication_mode {",
			"    type      = \"password\"",
			"    passwords = [random_password.example.result]",
			"  }",
			"}"
		]
	},
	"network_acl": {
		"prefix": "network_acl",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/network_acl",
			"resource \"aws_network_acl\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"network_acl_association": {
		"prefix": "network_acl_association",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/network_acl_association",
			"resource \"aws_network_acl_association\" \"main\" {",
			"  network_acl_id = aws_network_acl.main.id",
			"  subnet_id      = aws_subnet.main.id",
			"}"
		]
	},
	"network_acl_rule": {
		"prefix": "network_acl_rule",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/network_acl_rule",
			"resource \"aws_network_acl\" \"bar\" {",
			"  vpc_id = aws_vpc.foo.id",
			"}",
			"",
			"resource \"aws_network_acl_rule\" \"bar\" {",
			"  network_acl_id = aws_network_acl.bar.id",
			"  rule_number    = 200",
			"  egress         = false",
			"  protocol       = \"tcp\"",
			"  rule_action    = \"allow\"",
			"  cidr_block     = aws_vpc.foo.cidr_block",
			"  from_port      = 22",
			"  to_port        = 22",
			"}"
		]
	},
	"network_interface": {
		"prefix": "network_interface",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/network_interface",
			"resource \"aws_network_interface\" \"test\" {",
			"  subnet_id       = aws_subnet.public_a.id",
			"  private_ips     = [\"10.0.0.50\"]",
			"  security_groups = [aws_security_group.web.id]",
			"",
			"  attachment {",
			"    instance     = aws_instance.test.id",
			"    device_index = 1",
			"  }",
			"}"
		]
	},
	"network_interface_attachment": {
		"prefix": "network_interface_attachment",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/network_interface_attachment",
			"resource \"aws_network_interface_attachment\" \"test\" {",
			"  instance_id          = aws_instance.test.id",
			"  network_interface_id = aws_network_interface.test.id",
			"  device_index         = 0",
			"}"
		]
	},
	"network_interface_sg_attachment": {
		"prefix": "network_interface_sg_attachment",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/network_interface_sg_attachment",
			"resource \"aws_network_interface_sg_attachment\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"networkfirewall_firewall": {
		"prefix": "networkfirewall_firewall",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/networkfirewall_firewall",
			"resource \"aws_networkfirewall_firewall\" \"example\" {",
			"  name                = \"example\"",
			"  firewall_policy_arn = aws_networkfirewall_firewall_policy.example.arn",
			"  vpc_id              = aws_vpc.example.id",
			"  subnet_mapping {",
			"    subnet_id = aws_subnet.example.id",
			"  }",
			"",
			"  tags = {",
			"    Tag1 = \"Value1\"",
			"    Tag2 = \"Value2\"",
			"  }",
			"}"
		]
	},
	"networkfirewall_firewall_policy": {
		"prefix": "networkfirewall_firewall_policy",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/networkfirewall_firewall_policy",
			"resource \"aws_networkfirewall_firewall_policy\" \"example\" {",
			"  name = \"example\"",
			"",
			"  firewall_policy {",
			"    stateless_default_actions          = [\"aws:pass\"]",
			"    stateless_fragment_default_actions = [\"aws:drop\"]",
			"    stateless_rule_group_reference {",
			"      priority     = 1",
			"      resource_arn = aws_networkfirewall_rule_group.example.arn",
			"    }",
			"  }",
			"",
			"  tags = {",
			"    Tag1 = \"Value1\"",
			"    Tag2 = \"Value2\"",
			"  }",
			"}"
		]
	},
	"networkfirewall_logging_configuration": {
		"prefix": "networkfirewall_logging_configuration",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/networkfirewall_logging_configuration",
			"resource \"aws_networkfirewall_logging_configuration\" \"example\" {",
			"  firewall_arn = aws_networkfirewall_firewall.example.arn",
			"  logging_configuration {",
			"    log_destination_config {",
			"      log_destination = {",
			"        bucketName = aws_s3_bucket.example.bucket",
			"        prefix     = \"/example\"",
			"      }",
			"      log_destination_type = \"S3\"",
			"      log_type             = \"FLOW\"",
			"    }",
			"  }",
			"}"
		]
	},
	"networkfirewall_resource_policy": {
		"prefix": "networkfirewall_resource_policy",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/networkfirewall_resource_policy",
			"resource \"aws_networkfirewall_resource_policy\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"networkfirewall_rule_group": {
		"prefix": "networkfirewall_rule_group",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/networkfirewall_rule_group",
			"resource \"aws_networkfirewall_rule_group\" \"example\" {",
			"  capacity = 100",
			"  name     = \"example\"",
			"  type     = \"STATEFUL\"",
			"  rule_group {",
			"    rules_source {",
			"      rules_source_list {",
			"        generated_rules_type = \"DENYLIST\"",
			"        target_types         = [\"HTTP_HOST\"]",
			"        targets              = [\"test.example.com\"]",
			"      }",
			"    }",
			"  }",
			"",
			"  tags = {",
			"    Tag1 = \"Value1\"",
			"    Tag2 = \"Value2\"",
			"  }",
			"}"
		]
	},
	"networkmanager_attachment_accepter": {
		"prefix": "networkmanager_attachment_accepter",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/networkmanager_attachment_accepter",
			"resource \"aws_networkmanager_attachment_accepter\" \"test\" {",
			"  attachment_id   = aws_networkmanager_vpc_attachment.vpc.id",
			"  attachment_type = aws_networkmanager_vpc_attachment.vpc.attachment_type",
			"}"
		]
	},
	"networkmanager_connect_attachment": {
		"prefix": "networkmanager_connect_attachment",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/networkmanager_connect_attachment",
			"resource \"aws_networkmanager_vpc_attachment\" \"example\" {",
			"  subnet_arns     = aws_subnet.example[*].arn",
			"  core_network_id = awscc_networkmanager_core_network.example.id",
			"  vpc_arn         = aws_vpc.example.arn",
			"}",
			"",
			"resource \"aws_networkmanager_connect_attachment\" \"example\" {",
			"  core_network_id         = awscc_networkmanager_core_network.example.id",
			"  transport_attachment_id = aws_networkmanager_vpc_attachment.example.id",
			"  edge_location           = aws_networkmanager_vpc_attachment.example.edge_location",
			"  options {",
			"    protocol = \"GRE\"",
			"  }",
			"}"
		]
	},
	"networkmanager_connect_peer": {
		"prefix": "networkmanager_connect_peer",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/networkmanager_connect_peer",
			"resource \"aws_networkmanager_connect_peer\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"networkmanager_connection": {
		"prefix": "networkmanager_connection",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/networkmanager_connection",
			"resource \"aws_networkmanager_connection\" \"example\" {",
			"  global_network_id   = aws_networkmanager_global_network.example.id",
			"  device_id           = aws_networkmanager_device.example1.id",
			"  connected_device_id = aws_networkmanager_device.example2.id",
			"}"
		]
	},
	"networkmanager_core_network": {
		"prefix": "networkmanager_core_network",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/networkmanager_core_network",
			"resource \"aws_networkmanager_core_network\" \"example\" {",
			"  global_network_id = aws_networkmanager_global_network.example.id",
			"}"
		]
	},
	"networkmanager_core_network_policy_attachment": {
		"prefix": "networkmanager_core_network_policy_attachment",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/networkmanager_core_network_policy_attachment",
			"resource \"aws_networkmanager_core_network\" \"example\" {",
			"  global_network_id = aws_networkmanager_global_network.example.id",
			"}",
			"",
			"resource \"aws_networkmanager_core_network_policy_attachment\" \"example\" {",
			"  core_network_id = aws_networkmanager_core_network.example.id",
			"  policy_document = data.aws_networkmanager_core_network_policy_document.example.json",
			"}"
		]
	},
	"networkmanager_customer_gateway_association": {
		"prefix": "networkmanager_customer_gateway_association",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/networkmanager_customer_gateway_association",
			"resource \"aws_networkmanager_customer_gateway_association\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"networkmanager_device": {
		"prefix": "networkmanager_device",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/networkmanager_device",
			"resource \"aws_networkmanager_device\" \"example\" {",
			"  global_network_id = aws_networkmanager_global_network.example.id",
			"  site_id           = aws_networkmanager_site.example.id",
			"}"
		]
	},
	"networkmanager_global_network": {
		"prefix": "networkmanager_global_network",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/networkmanager_global_network",
			"resource \"aws_networkmanager_global_network\" \"example\" {",
			"  description = \"example\"",
			"}"
		]
	},
	"networkmanager_link": {
		"prefix": "networkmanager_link",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/networkmanager_link",
			"resource \"aws_networkmanager_link\" \"example\" {",
			"  global_network_id = aws_networkmanager_global_network.example.id",
			"  site_id           = aws_networkmanager_site.example.id",
			"",
			"  bandwidth {",
			"    upload_speed   = 10",
			"    download_speed = 50",
			"  }",
			"",
			"  provider_name = \"MegaCorp\"",
			"}"
		]
	},
	"networkmanager_link_association": {
		"prefix": "networkmanager_link_association",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/networkmanager_link_association",
			"resource \"aws_networkmanager_link_association\" \"example\" {",
			"  global_network_id = aws_networkmanager_global_network.example.id",
			"  link_id           = aws_networkmanager_link.example.id",
			"  device_id         = aws_networkmanager_device.example.id",
			"}"
		]
	},
	"networkmanager_site": {
		"prefix": "networkmanager_site",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/networkmanager_site",
			"resource \"aws_networkmanager_global_network\" \"example\" {",
			"}",
			"",
			"resource \"aws_networkmanager_site\" \"example\" {",
			"  global_network_id = aws_networkmanager_global_network.example.id",
			"}"
		]
	},
	"networkmanager_site_to_site_vpn_attachment": {
		"prefix": "networkmanager_site_to_site_vpn_attachment",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/networkmanager_site_to_site_vpn_attachment",
			"resource \"aws_networkmanager_site_to_site_vpn_attachment\" \"example\" {",
			"  core_network_id    = awscc_networkmanager_core_network.example.id",
			"  vpn_connection_arn = aws_vpn_connection.example.arn",
			"}"
		]
	},
	"networkmanager_transit_gateway_connect_peer_association": {
		"prefix": "networkmanager_transit_gateway_connect_peer_association",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/networkmanager_transit_gateway_connect_peer_association",
			"resource \"aws_networkmanager_transit_gateway_connect_peer_association\" \"example\" {",
			"  global_network_id                = aws_networkmanager_global_network.example.id",
			"  device_id                        = aws_networkmanager_device.example.id",
			"  transit_gateway_connect_peer_arn = aws_ec2_transit_gateway_connect_peer.example.arn",
			"}"
		]
	},
	"networkmanager_transit_gateway_peering": {
		"prefix": "networkmanager_transit_gateway_peering",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/networkmanager_transit_gateway_peering",
			"resource \"aws_networkmanager_transit_gateway_peering\" \"example\" {",
			"  core_network_id     = awscc_networkmanager_core_network.example.id",
			"  transit_gateway_arn = aws_ec2_transit_gateway.example.arn",
			"}"
		]
	},
	"networkmanager_transit_gateway_registration": {
		"prefix": "networkmanager_transit_gateway_registration",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/networkmanager_transit_gateway_registration",
			"resource \"aws_networkmanager_global_network\" \"example\" {",
			"  description = \"example\"",
			"}",
			"",
			"resource \"aws_ec2_transit_gateway\" \"example\" {}",
			"",
			"resource \"aws_networkmanager_transit_gateway_registration\" \"example\" {",
			"  global_network_id   = aws_networkmanager_global_network.example.id",
			"  transit_gateway_arn = aws_ec2_transit_gateway.example.arn",
			"}"
		]
	},
	"networkmanager_transit_gateway_route_table_attachment": {
		"prefix": "networkmanager_transit_gateway_route_table_attachment",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/networkmanager_transit_gateway_route_table_attachment",
			"resource \"aws_networkmanager_transit_gateway_route_table_attachment\" \"example\" {",
			"  peering_id                      = aws_networkmanager_transit_gateway_peering.example.id",
			"  transit_gateway_route_table_arn = aws_ec2_transit_gateway_route_table.example.arn",
			"}"
		]
	},
	"networkmanager_vpc_attachment": {
		"prefix": "networkmanager_vpc_attachment",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/networkmanager_vpc_attachment",
			"resource \"aws_networkmanager_vpc_attachment\" \"example\" {",
			"  subnet_arns     = [aws_subnet.example.arn]",
			"  core_network_id = awscc_networkmanager_core_network.example.id",
			"  vpc_arn         = aws_vpc.example.arn",
			"}"
		]
	},
	"rds_cluster": {
		"prefix": "rds_cluster",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/rds_cluster",
			"resource \"aws_rds_cluster\" \"default\" {",
			"  cluster_identifier      = \"aurora-cluster-demo\"",
			"  engine                  = \"aurora-mysql\"",
			"  engine_version          = \"5.7.mysql_aurora.2.03.2\"",
			"  availability_zones      = [\"us-west-2a\", \"us-west-2b\", \"us-west-2c\"]",
			"  database_name           = \"mydb\"",
			"  master_username         = \"foo\"",
			"  master_password         = \"bar\"",
			"  backup_retention_period = 5",
			"  preferred_backup_window = \"07:00-09:00\"",
			"}"
		]
	},
	"rds_cluster_activity_stream": {
		"prefix": "rds_cluster_activity_stream",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/rds_cluster_activity_stream",
			"resource \"aws_rds_cluster_activity_stream\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"rds_cluster_endpoint": {
		"prefix": "rds_cluster_endpoint",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/rds_cluster_endpoint",
			"resource \"aws_rds_cluster_endpoint\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"rds_cluster_instance": {
		"prefix": "rds_cluster_instance",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/rds_cluster_instance",
			"resource \"aws_rds_cluster_instance\" \"cluster_instances\" {",
			"  count              = 2",
			"  identifier         = \"aurora-cluster-demo-${count.index}\"",
			"  cluster_identifier = aws_rds_cluster.default.id",
			"  instance_class     = \"db.r4.large\"",
			"  engine             = aws_rds_cluster.default.engine",
			"  engine_version     = aws_rds_cluster.default.engine_version",
			"}",
			"",
			"resource \"aws_rds_cluster\" \"default\" {",
			"  cluster_identifier = \"aurora-cluster-demo\"",
			"  availability_zones = [\"us-west-2a\", \"us-west-2b\", \"us-west-2c\"]",
			"  database_name      = \"mydb\"",
			"  master_username    = \"foo\"",
			"  master_password    = \"barbut8chars\"",
			"}"
		]
	},
	"rds_cluster_parameter_group": {
		"prefix": "rds_cluster_parameter_group",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/rds_cluster_parameter_group",
			"resource \"aws_rds_cluster_parameter_group\" \"default\" {",
			"  name        = \"rds-cluster-pg\"",
			"  family      = \"aurora5.6\"",
			"  description = \"RDS default cluster parameter group\"",
			"",
			"  parameter {",
			"    name  = \"character_set_server\"",
			"    value = \"utf8\"",
			"  }",
			"",
			"  parameter {",
			"    name  = \"character_set_client\"",
			"    value = \"utf8\"",
			"  }",
			"}"
		]
	},
	"rds_cluster_role_association": {
		"prefix": "rds_cluster_role_association",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/rds_cluster_role_association",
			"resource \"aws_rds_cluster_role_association\" \"example\" {",
			"  db_cluster_identifier = aws_rds_cluster.example.id",
			"  feature_name          = \"S3_INTEGRATION\"",
			"  role_arn              = aws_iam_role.example.arn",
			"}"
		]
	},
	"rds_export_task": {
		"prefix": "rds_export_task",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/rds_export_task",
			"resource \"aws_rds_export_task\" \"example\" {",
			"  export_task_identifier = \"example\"",
			"  source_arn             = aws_db_snapshot.example.db_snapshot_arn",
			"  s3_bucket_name         = aws_s3_bucket.example.id",
			"  iam_role_arn           = aws_iam_role.example.arn",
			"  kms_key_id             = aws_kms_key.example.arn",
			"}"
		]
	},
	"rds_global_cluster": {
		"prefix": "rds_global_cluster",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/rds_global_cluster",
			"resource \"aws_rds_global_cluster\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"rds_reserved_instance": {
		"prefix": "rds_reserved_instance",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/rds_reserved_instance",
			"data \"aws_rds_reserved_instance_offering\" \"test\" {",
			"  db_instance_class   = \"db.t2.micro\"",
			"  duration            = 31536000",
			"  multi_az            = false",
			"  offering_type       = \"All Upfront\"",
			"  product_description = \"mysql\"",
			"}",
			"",
			"resource \"aws_rds_reserved_instance\" \"example\" {",
			"  offering_id    = data.aws_rds_reserved_instance_offering.test.offering_id",
			"  reservation_id = \"optionalCustomReservationID\"",
			"  instance_count = 3",
			"}"
		]
	},
	"route53_cidr_collection": {
		"prefix": "route53_cidr_collection",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/route53_cidr_collection",
			"resource \"aws_route53_cidr_collection\" \"example\" {",
			"  name = \"collection-1\"",
			"}"
		]
	},
	"route53_cidr_location": {
		"prefix": "route53_cidr_location",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/route53_cidr_location",
			"resource \"aws_route53_cidr_collection\" \"example\" {",
			"  name = \"collection-1\"",
			"}",
			"",
			"resource \"aws_route53_cidr_location\" \"example\" {",
			"  cidr_collection_id = aws_route53_cidr_collection.example.id",
			"  name               = \"office\"",
			"  cidr_blocks        = [\"200.5.3.0/24\", \"200.6.3.0/24\"]",
			"}"
		]
	},
	"route53_delegation_set": {
		"prefix": "route53_delegation_set",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/route53_delegation_set",
			"resource \"aws_route53_delegation_set\" \"main\" {",
			"  reference_name = \"DynDNS\"",
			"}",
			"",
			"resource \"aws_route53_zone\" \"primary\" {",
			"  name              = \"hashicorp.com\"",
			"  delegation_set_id = aws_route53_delegation_set.main.id",
			"}",
			"",
			"resource \"aws_route53_zone\" \"secondary\" {",
			"  name              = \"terraform.io\"",
			"  delegation_set_id = aws_route53_delegation_set.main.id",
			"}"
		]
	},
	"route53_health_check": {
		"prefix": "route53_health_check",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/route53_health_check",
			"resource \"aws_route53_health_check\" \"example\" {",
			"  fqdn              = \"example.com\"",
			"  port              = 80",
			"  type              = \"HTTP\"",
			"  resource_path     = \"/\"",
			"  failure_threshold = \"5\"",
			"  request_interval  = \"30\"",
			"",
			"  tags = {",
			"    Name = \"tf-test-health-check\"",
			"  }",
			"}"
		]
	},
	"route53_hosted_zone_dnssec": {
		"prefix": "route53_hosted_zone_dnssec",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/route53_hosted_zone_dnssec",
			"resource \"aws_route53_hosted_zone_dnssec\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"route53_key_signing_key": {
		"prefix": "route53_key_signing_key",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/route53_key_signing_key",
			"resource \"aws_route53_key_signing_key\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"route53_query_log": {
		"prefix": "route53_query_log",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/route53_query_log",
			"resource \"aws_route53_query_log\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"route53_record": {
		"prefix": "route53_record",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/route53_record",
			"resource \"aws_route53_record\" \"www\" {",
			"  zone_id = aws_route53_zone.primary.zone_id",
			"  name    = \"www.example.com\"",
			"  type    = \"A\"",
			"  ttl     = 300",
			"  records = [aws_eip.lb.public_ip]",
			"}"
		]
	},
	"route53_resolver_config": {
		"prefix": "route53_resolver_config",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/route53_resolver_config",
			"resource \"aws_vpc\" \"example\" {",
			"  cidr_block           = \"10.0.0.0/16\"",
			"  enable_dns_support   = true",
			"  enable_dns_hostnames = true",
			"}",
			"",
			"resource \"aws_route53_resolver_config\" \"example\" {",
			"  resource_id              = aws_vpc.example.id",
			"  autodefined_reverse_flag = \"DISABLE\"",
			"}"
		]
	},
	"route53_resolver_dnssec_config": {
		"prefix": "route53_resolver_dnssec_config",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/route53_resolver_dnssec_config",
			"resource \"aws_vpc\" \"example\" {",
			"  cidr_block           = \"10.0.0.0/16\"",
			"  enable_dns_support   = true",
			"  enable_dns_hostnames = true",
			"}",
			"",
			"resource \"aws_route53_resolver_dnssec_config\" \"example\" {",
			"  resource_id = aws_vpc.example.id",
			"}"
		]
	},
	"route53_resolver_endpoint": {
		"prefix": "route53_resolver_endpoint",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/route53_resolver_endpoint",
			"resource \"aws_route53_resolver_endpoint\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"route53_resolver_firewall_config": {
		"prefix": "route53_resolver_firewall_config",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/route53_resolver_firewall_config",
			"resource \"aws_vpc\" \"example\" {",
			"  cidr_block           = \"10.0.0.0/16\"",
			"  enable_dns_support   = true",
			"  enable_dns_hostnames = true",
			"}",
			"",
			"resource \"aws_route53_resolver_firewall_config\" \"example\" {",
			"  resource_id        = aws_vpc.example.id",
			"  firewall_fail_open = \"ENABLED\"",
			"}"
		]
	},
	"route53_resolver_firewall_domain_list": {
		"prefix": "route53_resolver_firewall_domain_list",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/route53_resolver_firewall_domain_list",
			"resource \"aws_route53_resolver_firewall_domain_list\" \"example\" {",
			"  name = \"example\"",
			"}"
		]
	},
	"route53_resolver_firewall_rule": {
		"prefix": "route53_resolver_firewall_rule",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/route53_resolver_firewall_rule",
			"resource \"aws_route53_resolver_firewall_rule\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"route53_resolver_firewall_rule_group": {
		"prefix": "route53_resolver_firewall_rule_group",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/route53_resolver_firewall_rule_group",
			"resource \"aws_route53_resolver_firewall_rule_group\" \"example\" {",
			"  name = \"example\"",
			"}"
		]
	},
	"route53_resolver_firewall_rule_group_association": {
		"prefix": "route53_resolver_firewall_rule_group_association",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/route53_resolver_firewall_rule_group_association",
			"resource \"aws_route53_resolver_firewall_rule_group\" \"example\" {",
			"  name = \"example\"",
			"}",
			"",
			"resource \"aws_route53_resolver_firewall_rule_group_association\" \"example\" {",
			"  name                   = \"example\"",
			"  firewall_rule_group_id = aws_route53_resolver_firewall_rule_group.example.id",
			"  priority               = 100",
			"  vpc_id                 = aws_vpc.example.id",
			"}"
		]
	},
	"route53_resolver_query_log_config": {
		"prefix": "route53_resolver_query_log_config",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/route53_resolver_query_log_config",
			"resource \"aws_route53_resolver_query_log_config\" \"example\" {",
			"  name            = \"example\"",
			"  destination_arn = aws_s3_bucket.example.arn",
			"",
			"  tags = {",
			"    Environment = \"Prod\"",
			"  }",
			"}"
		]
	},
	"route53_resolver_query_log_config_association": {
		"prefix": "route53_resolver_query_log_config_association",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/route53_resolver_query_log_config_association",
			"resource \"aws_route53_resolver_query_log_config_association\" \"example\" {",
			"  resolver_query_log_config_id = aws_route53_resolver_query_log_config.example.id",
			"  resource_id                  = aws_vpc.example.id",
			"}"
		]
	},
	"route53_resolver_rule": {
		"prefix": "route53_resolver_rule",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/route53_resolver_rule",
			"resource \"aws_route53_resolver_rule\" \"sys\" {",
			"  domain_name = \"subdomain.example.com\"",
			"  rule_type   = \"SYSTEM\"",
			"}"
		]
	},
	"route53_resolver_rule_association": {
		"prefix": "route53_resolver_rule_association",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/route53_resolver_rule_association",
			"resource \"aws_route53_resolver_rule_association\" \"example\" {",
			"  resolver_rule_id = aws_route53_resolver_rule.sys.id",
			"  vpc_id           = aws_vpc.foo.id",
			"}"
		]
	},
	"route53_traffic_policy": {
		"prefix": "route53_traffic_policy",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/route53_traffic_policy",
			"resource \"aws_route53_traffic_policy\" \"example\" {",
			"  name     = \"example\"",
			"  comment  = \"example comment\"",
			"  document = <<EOF",
			"{",
			"  \"AWSPolicyFormatVersion\": \"2015-10-01\",",
			"  \"RecordType\": \"A\",",
			"  \"Endpoints\": {",
			"    \"endpoint-start-NkPh\": {",
			"      \"Type\": \"value\",",
			"      \"Value\": \"10.0.0.2\"",
			"    }",
			"  },",
			"  \"StartEndpoint\": \"endpoint-start-NkPh\"",
			"}",
			"EOF",
			"}"
		]
	},
	"route53_traffic_policy_instance": {
		"prefix": "route53_traffic_policy_instance",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/route53_traffic_policy_instance",
			"resource \"aws_route53_traffic_policy_instance\" \"test\" {",
			"  name                   = \"test.example.com\"",
			"  traffic_policy_id      = \"b3gb108f-ea6f-45a5-baab-9d112d8b4037\"",
			"  traffic_policy_version = 1",
			"  hosted_zone_id         = \"Z033120931TAQO548OGJC\"",
			"  ttl                    = 360",
			"}"
		]
	},
	"route53_vpc_association_authorization": {
		"prefix": "route53_vpc_association_authorization",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/route53_vpc_association_authorization",
			"resource \"aws_route53_vpc_association_authorization\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"route53_zone": {
		"prefix": "route53_zone",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/route53_zone",
			"resource \"aws_route53_zone\" \"primary\" {",
			"  name = \"example.com\"",
			"}"
		]
	},
	"route53_zone_association": {
		"prefix": "route53_zone_association",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/route53_zone_association",
			"resource \"aws_route53_zone_association\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"route53domains_registered_domain": {
		"prefix": "route53domains_registered_domain",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/route53domains_registered_domain",
			"resource \"aws_route53domains_registered_domain\" \"example\" {",
			"  domain_name = \"example.com\"",
			"",
			"  name_server {",
			"    name = \"ns-195.awsdns-24.com\"",
			"  }",
			"",
			"  name_server {",
			"    name = \"ns-874.awsdns-45.net\"",
			"  }",
			"",
			"  tags = {",
			"    Environment = \"test\"",
			"  }",
			"}"
		]
	},
	"route53recoverycontrolconfig_cluster": {
		"prefix": "route53recoverycontrolconfig_cluster",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/route53recoverycontrolconfig_cluster",
			"resource \"aws_route53recoverycontrolconfig_cluster\" \"example\" {",
			"  name = \"georgefitzgerald\"",
			"}"
		]
	},
	"route53recoverycontrolconfig_control_panel": {
		"prefix": "route53recoverycontrolconfig_control_panel",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/route53recoverycontrolconfig_control_panel",
			"resource \"aws_route53recoverycontrolconfig_control_panel\" \"example\" {",
			"  name        = \"balmorhea\"",
			"  cluster_arn = \"arn:aws:route53-recovery-control::123456789012:cluster/8d47920e-d789-437d-803a-2dcc4b204393\"",
			"}"
		]
	},
	"route53recoverycontrolconfig_routing_control": {
		"prefix": "route53recoverycontrolconfig_routing_control",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/route53recoverycontrolconfig_routing_control",
			"resource \"aws_route53recoverycontrolconfig_routing_control\" \"example\" {",
			"  name        = \"tinlicker\"",
			"  cluster_arn = \"arn:aws:route53-recovery-control::881188118811:cluster/8d47920e-d789-437d-803a-2dcc4b204393\"",
			"}"
		]
	},
	"route53recoverycontrolconfig_safety_rule": {
		"prefix": "route53recoverycontrolconfig_safety_rule",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/route53recoverycontrolconfig_safety_rule",
			"resource \"aws_route53recoverycontrolconfig_safety_rule\" \"example\" {",
			"  asserted_controls = [aws_route53recoverycontrolconfig_routing_control.example.arn]",
			"  control_panel_arn = \"arn:aws:route53-recovery-control::313517334327:controlpanel/abd5fbfc052d4844a082dbf400f61da8\"",
			"  name              = \"daisyguttridge\"",
			"  wait_period_ms    = 5000",
			"",
			"  rule_config {",
			"    inverted  = false",
			"    threshold = 1",
			"    type      = \"ATLEAST\"",
			"  }",
			"}"
		]
	},
	"route53recoveryreadiness_cell": {
		"prefix": "route53recoveryreadiness_cell",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/route53recoveryreadiness_cell",
			"resource \"aws_route53recoveryreadiness_cell\" \"example\" {",
			"  cell_name = \"us-west-2-failover-cell\"",
			"}"
		]
	},
	"route53recoveryreadiness_readiness_check": {
		"prefix": "route53recoveryreadiness_readiness_check",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/route53recoveryreadiness_readiness_check",
			"resource \"aws_route53recoveryreadiness_readiness_check\" \"example\" {",
			"  readiness_check_name = my-cw-alarm-check",
			"  resource_set_name    = my-cw-alarm-set",
			"}"
		]
	},
	"route53recoveryreadiness_recovery_group": {
		"prefix": "route53recoveryreadiness_recovery_group",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/route53recoveryreadiness_recovery_group",
			"resource \"aws_route53recoveryreadiness_recovery_group\" \"example\" {",
			"  recovery_group_name = \"my-high-availability-app\"",
			"}"
		]
	},
	"route53recoveryreadiness_resource_set": {
		"prefix": "route53recoveryreadiness_resource_set",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/route53recoveryreadiness_resource_set",
			"resource \"aws_route53recoveryreadiness_resource_set\" \"example\" {",
			"  resource_set_name = my-cw-alarm-set",
			"  resource_set_type = \"AWS::CloudWatch::Alarm\"",
			"",
			"  resources {",
			"    resource_arn = aws_cloudwatch_metric_alarm.example.arn",
			"  }",
			"}"
		]
	},
	"s3_access_point": {
		"prefix": "s3_access_point",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_access_point",
			"resource \"aws_s3_bucket\" \"example\" {",
			"  bucket = \"example\"",
			"}",
			"",
			"resource \"aws_s3_access_point\" \"example\" {",
			"  bucket = aws_s3_bucket.example.id",
			"  name   = \"example\"",
			"}"
		]
	},
	"s3_account_public_access_block": {
		"prefix": "s3_account_public_access_block",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_account_public_access_block",
			"resource \"aws_s3_account_public_access_block\" \"example\" {",
			"  block_public_acls   = true",
			"  block_public_policy = true",
			"}"
		]
	},
	"s3_bucket": {
		"prefix": "s3_bucket",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket",
			"resource \"aws_s3_bucket\" \"example\" {",
			"  bucket = \"my-tf-test-bucket\"",
			"",
			"  tags = {",
			"    Name        = \"My bucket\"",
			"    Environment = \"Dev\"",
			"  }",
			"}"
		]
	},
	"s3_bucket_accelerate_configuration": {
		"prefix": "s3_bucket_accelerate_configuration",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_accelerate_configuration",
			"resource \"aws_s3_bucket\" \"mybucket\" {",
			"  bucket = \"mybucket\"",
			"}",
			"",
			"resource \"aws_s3_bucket_accelerate_configuration\" \"example\" {",
			"  bucket = aws_s3_bucket.mybucket.id",
			"  status = \"Enabled\"",
			"}"
		]
	},
	"s3_bucket_acl": {
		"prefix": "s3_bucket_acl",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_acl",
			"resource \"aws_s3_bucket\" \"example\" {",
			"  bucket = \"my-tf-example-bucket\"",
			"}",
			"",
			"resource \"aws_s3_bucket_ownership_controls\" \"example\" {",
			"  bucket = aws_s3_bucket.example.id",
			"  rule {",
			"    object_ownership = \"BucketOwnerPreferred\"",
			"  }",
			"}",
			"",
			"resource \"aws_s3_bucket_acl\" \"example\" {",
			"  depends_on = [aws_s3_bucket_ownership_controls.example]",
			"",
			"  bucket = aws_s3_bucket.example.id",
			"  acl    = \"private\"",
			"}"
		]
	},
	"s3_bucket_analytics_configuration": {
		"prefix": "s3_bucket_analytics_configuration",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_analytics_configuration",
			"resource \"aws_s3_bucket_analytics_configuration\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"s3_bucket_cors_configuration": {
		"prefix": "s3_bucket_cors_configuration",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_cors_configuration",
			"resource \"aws_s3_bucket_cors_configuration\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"s3_bucket_intelligent_tiering_configuration": {
		"prefix": "s3_bucket_intelligent_tiering_configuration",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_intelligent_tiering_configuration",
			"resource \"aws_s3_bucket_intelligent_tiering_configuration\" \"example-entire-bucket\" {",
			"  bucket = aws_s3_bucket.example.id",
			"  name   = \"EntireBucket\"",
			"",
			"  tiering {",
			"    access_tier = \"DEEP_ARCHIVE_ACCESS\"",
			"    days        = 180",
			"  }",
			"  tiering {",
			"    access_tier = \"ARCHIVE_ACCESS\"",
			"    days        = 125",
			"  }",
			"}",
			"",
			"resource \"aws_s3_bucket\" \"example\" {",
			"  bucket = \"example\"",
			"}"
		]
	},
	"s3_bucket_inventory": {
		"prefix": "s3_bucket_inventory",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_inventory",
			"resource \"aws_s3_bucket_inventory\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"s3_bucket_lifecycle_configuration": {
		"prefix": "s3_bucket_lifecycle_configuration",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_lifecycle_configuration",
			"resource \"aws_s3_bucket_lifecycle_configuration\" \"example\" {",
			"  bucket = aws_s3_bucket.bucket.id",
			"",
			"  rule {",
			"    id = \"rule-1\"",
			"",
			"    # ... other transition/expiration actions ...",
			"",
			"    status = \"Enabled\"",
			"  }",
			"}"
		]
	},
	"s3_bucket_logging": {
		"prefix": "s3_bucket_logging",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_logging",
			"resource \"aws_s3_bucket_logging\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"s3_bucket_metric": {
		"prefix": "s3_bucket_metric",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_metric",
			"resource \"aws_s3_bucket\" \"example\" {",
			"  bucket = \"example\"",
			"}",
			"",
			"resource \"aws_s3_bucket_metric\" \"example-entire-bucket\" {",
			"  bucket = aws_s3_bucket.example.id",
			"  name   = \"EntireBucket\"",
			"}"
		]
	},
	"s3_bucket_notification": {
		"prefix": "s3_bucket_notification",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_notification",
			"resource \"aws_s3_bucket_notification\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"s3_bucket_object": {
		"prefix": "s3_bucket_object",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_object",
			"resource \"aws_s3_bucket_object\" \"object\" {",
			"  bucket = \"your_bucket_name\"",
			"  key    = \"new_object_key\"",
			"  source = \"path/to/file\"",
			"",
			"  # The filemd5() function is available in Terraform 0.11.12 and later",
			"  # For Terraform 0.11.11 and earlier, use the md5() function and the file() function:",
			"  # etag = \"${md5(file(\"path/to/file\"))}\"",
			"  etag = filemd5(\"path/to/file\")",
			"}"
		]
	},
	"s3_bucket_object_lock_configuration": {
		"prefix": "s3_bucket_object_lock_configuration",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_object_lock_configuration",
			"resource \"aws_s3_bucket\" \"example\" {",
			"  bucket = \"mybucket\"",
			"",
			"  object_lock_enabled = true",
			"}",
			"",
			"resource \"aws_s3_bucket_object_lock_configuration\" \"example\" {",
			"  bucket = aws_s3_bucket.example.id",
			"",
			"  rule {",
			"    default_retention {",
			"      mode = \"COMPLIANCE\"",
			"      days = 5",
			"    }",
			"  }",
			"}"
		]
	},
	"s3_bucket_ownership_controls": {
		"prefix": "s3_bucket_ownership_controls",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_ownership_controls",
			"resource \"aws_s3_bucket\" \"example\" {",
			"  bucket = \"example\"",
			"}",
			"",
			"resource \"aws_s3_bucket_ownership_controls\" \"example\" {",
			"  bucket = aws_s3_bucket.example.id",
			"",
			"  rule {",
			"    object_ownership = \"BucketOwnerPreferred\"",
			"  }",
			"}"
		]
	},
	"s3_bucket_policy": {
		"prefix": "s3_bucket_policy",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_policy",
			"resource \"aws_s3_bucket_policy\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"s3_bucket_public_access_block": {
		"prefix": "s3_bucket_public_access_block",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block",
			"resource \"aws_s3_bucket\" \"example\" {",
			"  bucket = \"example\"",
			"}",
			"",
			"resource \"aws_s3_bucket_public_access_block\" \"example\" {",
			"  bucket = aws_s3_bucket.example.id",
			"",
			"  block_public_acls       = true",
			"  block_public_policy     = true",
			"  ignore_public_acls      = true",
			"  restrict_public_buckets = true",
			"}"
		]
	},
	"s3_bucket_replication_configuration": {
		"prefix": "s3_bucket_replication_configuration",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_replication_configuration",
			"resource \"aws_s3_bucket_replication_configuration\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"s3_bucket_request_payment_configuration": {
		"prefix": "s3_bucket_request_payment_configuration",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_request_payment_configuration",
			"resource \"aws_s3_bucket_request_payment_configuration\" \"example\" {",
			"  bucket = aws_s3_bucket.example.id",
			"  payer  = \"Requester\"",
			"}"
		]
	},
	"s3_bucket_server_side_encryption_configuration": {
		"prefix": "s3_bucket_server_side_encryption_configuration",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_server_side_encryption_configuration",
			"resource \"aws_kms_key\" \"mykey\" {",
			"  description             = \"This key is used to encrypt bucket objects\"",
			"  deletion_window_in_days = 10",
			"}",
			"",
			"resource \"aws_s3_bucket\" \"mybucket\" {",
			"  bucket = \"mybucket\"",
			"}",
			"",
			"resource \"aws_s3_bucket_server_side_encryption_configuration\" \"example\" {",
			"  bucket = aws_s3_bucket.mybucket.id",
			"",
			"  rule {",
			"    apply_server_side_encryption_by_default {",
			"      kms_master_key_id = aws_kms_key.mykey.arn",
			"      sse_algorithm     = \"aws:kms\"",
			"    }",
			"  }",
			"}"
		]
	},
	"s3_bucket_versioning": {
		"prefix": "s3_bucket_versioning",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_versioning",
			"resource \"aws_s3_bucket\" \"example\" {",
			"  bucket = \"example-bucket\"",
			"}",
			"",
			"resource \"aws_s3_bucket_acl\" \"example\" {",
			"  bucket = aws_s3_bucket.example.id",
			"  acl    = \"private\"",
			"}",
			"",
			"resource \"aws_s3_bucket_versioning\" \"versioning_example\" {",
			"  bucket = aws_s3_bucket.example.id",
			"  versioning_configuration {",
			"    status = \"Enabled\"",
			"  }",
			"}"
		]
	},
	"s3_bucket_website_configuration": {
		"prefix": "s3_bucket_website_configuration",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_website_configuration",
			"resource \"aws_s3_bucket_website_configuration\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"s3_object": {
		"prefix": "s3_object",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_object",
			"resource \"aws_s3_object\" \"object\" {",
			"  bucket = \"your_bucket_name\"",
			"  key    = \"new_object_key\"",
			"  source = \"path/to/file\"",
			"",
			"  # The filemd5() function is available in Terraform 0.11.12 and later",
			"  # For Terraform 0.11.11 and earlier, use the md5() function and the file() function:",
			"  # etag = \"${md5(file(\"path/to/file\"))}\"",
			"  etag = filemd5(\"path/to/file\")",
			"}"
		]
	},
	"s3_object_copy": {
		"prefix": "s3_object_copy",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_object_copy",
			"resource \"aws_s3_object_copy\" \"test\" {",
			"  bucket = \"destination_bucket\"",
			"  key    = \"destination_key\"",
			"  source = \"source_bucket/source_key\"",
			"",
			"  grant {",
			"    uri         = \"http://acs.amazonaws.com/groups/global/AllUsers\"",
			"    type        = \"Group\"",
			"    permissions = [\"READ\"]",
			"  }",
			"}"
		]
	},
	"s3control_access_point_policy": {
		"prefix": "s3control_access_point_policy",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3control_access_point_policy",
			"resource \"aws_s3control_access_point_policy\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"s3control_bucket": {
		"prefix": "s3control_bucket",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3control_bucket",
			"resource \"aws_s3control_bucket\" \"example\" {",
			"  bucket     = \"example\"",
			"  outpost_id = data.aws_outposts_outpost.example.id",
			"}"
		]
	},
	"s3control_bucket_lifecycle_configuration": {
		"prefix": "s3control_bucket_lifecycle_configuration",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3control_bucket_lifecycle_configuration",
			"resource \"aws_s3control_bucket_lifecycle_configuration\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"s3control_bucket_policy": {
		"prefix": "s3control_bucket_policy",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3control_bucket_policy",
			"resource \"aws_s3control_bucket_policy\" \"example\" {",
			"  bucket = aws_s3control_bucket.example.arn",
			"  policy = jsonencode({",
			"    Id = \"testBucketPolicy\"",
			"    Statement = [",
			"      {",
			"        Action = \"s3-outposts:PutBucketLifecycleConfiguration\"",
			"        Effect = \"Deny\"",
			"        Principal = {",
			"          AWS = \"*\"",
			"        }",
			"        Resource = aws_s3control_bucket.example.arn",
			"        Sid      = \"statement1\"",
			"      }",
			"    ]",
			"    Version = \"2012-10-17\"",
			"  })",
			"}"
		]
	},
	"s3control_multi_region_access_point": {
		"prefix": "s3control_multi_region_access_point",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3control_multi_region_access_point",
			"resource \"aws_s3control_multi_region_access_point\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"s3control_multi_region_access_point_policy": {
		"prefix": "s3control_multi_region_access_point_policy",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3control_multi_region_access_point_policy",
			"resource \"aws_s3control_multi_region_access_point_policy\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"s3control_object_lambda_access_point": {
		"prefix": "s3control_object_lambda_access_point",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3control_object_lambda_access_point",
			"resource \"aws_s3control_object_lambda_access_point\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"s3control_object_lambda_access_point_policy": {
		"prefix": "s3control_object_lambda_access_point_policy",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3control_object_lambda_access_point_policy",
			"resource \"aws_s3control_object_lambda_access_point_policy\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"s3control_storage_lens_configuration": {
		"prefix": "s3control_storage_lens_configuration",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3control_storage_lens_configuration",
			"resource \"aws_s3control_storage_lens_configuration\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"s3outposts_endpoint": {
		"prefix": "s3outposts_endpoint",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3outposts_endpoint",
			"resource \"aws_s3outposts_endpoint\" \"example\" {",
			"  outpost_id        = data.aws_outposts_outpost.example.id",
			"  security_group_id = aws_security_group.example.id",
			"  subnet_id         = aws_subnet.example.id",
			"}"
		]
	},
	"security_group": {
		"prefix": "security_group",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group",
			"resource \"aws_security_group\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"security_group_rule": {
		"prefix": "security_group_rule",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule",
			"resource \"aws_security_group_rule\" \"example\" {",
			"  type              = \"ingress\"",
			"  from_port         = 0",
			"  to_port           = 65535",
			"  protocol          = \"tcp\"",
			"  cidr_blocks       = [aws_vpc.example.cidr_block]",
			"  ipv6_cidr_blocks  = [aws_vpc.example.ipv6_cidr_block]",
			"  security_group_id = \"sg-123456\"",
			"}"
		]
	},
	"securityhub_account": {
		"prefix": "securityhub_account",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/securityhub_account",
			"resource \"aws_securityhub_account\" \"example\" {}"
		]
	},
	"securityhub_action_target": {
		"prefix": "securityhub_action_target",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/securityhub_action_target",
			"resource \"aws_securityhub_account\" \"example\" {}",
			"",
			"resource \"aws_securityhub_action_target\" \"example\" {",
			"  depends_on  = [aws_securityhub_account.example]",
			"  name        = \"Send notification to chat\"",
			"  identifier  = \"SendToChat\"",
			"  description = \"This is custom action sends selected findings to chat\"",
			"}"
		]
	},
	"securityhub_finding_aggregator": {
		"prefix": "securityhub_finding_aggregator",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/securityhub_finding_aggregator",
			"resource \"aws_securityhub_account\" \"example\" {}",
			"",
			"resource \"aws_securityhub_finding_aggregator\" \"example\" {",
			"  linking_mode = \"ALL_REGIONS\"",
			"",
			"  depends_on = [aws_securityhub_account.example]",
			"}"
		]
	},
	"securityhub_insight": {
		"prefix": "securityhub_insight",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/securityhub_insight",
			"resource \"aws_securityhub_insight\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"securityhub_invite_accepter": {
		"prefix": "securityhub_invite_accepter",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/securityhub_invite_accepter",
			"resource \"aws_securityhub_account\" \"example\" {}",
			"",
			"resource \"aws_securityhub_member\" \"example\" {",
			"  account_id = \"123456789012\"",
			"  email      = \"example@example.com\"",
			"  invite     = true",
			"}",
			"",
			"resource \"aws_securityhub_account\" \"invitee\" {",
			"  provider = \"aws.invitee\"",
			"}",
			"",
			"resource \"aws_securityhub_invite_accepter\" \"invitee\" {",
			"  provider   = \"aws.invitee\"",
			"  depends_on = [aws_securityhub_account.invitee]",
			"  master_id  = aws_securityhub_member.example.master_id",
			"}"
		]
	},
	"securityhub_member": {
		"prefix": "securityhub_member",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/securityhub_member",
			"resource \"aws_securityhub_account\" \"example\" {}",
			"",
			"resource \"aws_securityhub_member\" \"example\" {",
			"  depends_on = [aws_securityhub_account.example]",
			"  account_id = \"123456789012\"",
			"  email      = \"example@example.com\"",
			"  invite     = true",
			"}"
		]
	},
	"securityhub_organization_admin_account": {
		"prefix": "securityhub_organization_admin_account",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/securityhub_organization_admin_account",
			"resource \"aws_organizations_organization\" \"example\" {",
			"  aws_service_access_principals = [\"securityhub.amazonaws.com\"]",
			"  feature_set                   = \"ALL\"",
			"}",
			"",
			"resource \"aws_securityhub_account\" \"example\" {}",
			"",
			"resource \"aws_securityhub_organization_admin_account\" \"example\" {",
			"  depends_on = [aws_organizations_organization.example]",
			"",
			"  admin_account_id = \"123456789012\"",
			"}",
			"",
			"# Auto enable security hub in organization member accounts",
			"resource \"aws_securityhub_organization_configuration\" \"example\" {",
			"  auto_enable = true",
			"}"
		]
	},
	"securityhub_organization_configuration": {
		"prefix": "securityhub_organization_configuration",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/securityhub_organization_configuration",
			"resource \"aws_organizations_organization\" \"example\" {",
			"  aws_service_access_principals = [\"securityhub.amazonaws.com\"]",
			"  feature_set                   = \"ALL\"",
			"}",
			"",
			"resource \"aws_securityhub_organization_admin_account\" \"example\" {",
			"  depends_on = [aws_organizations_organization.example]",
			"",
			"  admin_account_id = \"123456789012\"",
			"}",
			"",
			"resource \"aws_securityhub_organization_configuration\" \"example\" {",
			"  auto_enable = true",
			"}"
		]
	},
	"securityhub_product_subscription": {
		"prefix": "securityhub_product_subscription",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/securityhub_product_subscription",
			"resource \"aws_securityhub_account\" \"example\" {}",
			"",
			"data \"aws_region\" \"current\" {}",
			"",
			"resource \"aws_securityhub_product_subscription\" \"example\" {",
			"  depends_on  = [aws_securityhub_account.example]",
			"  product_arn = \"arn:aws:securityhub:${data.aws_region.current.name}:733251395267:product/alertlogic/althreatmanagement\"",
			"}"
		]
	},
	"securityhub_standards_control": {
		"prefix": "securityhub_standards_control",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/securityhub_standards_control",
			"resource \"aws_securityhub_account\" \"example\" {}",
			"",
			"resource \"aws_securityhub_standards_subscription\" \"cis_aws_foundations_benchmark\" {",
			"  standards_arn = \"arn:aws:securityhub:::ruleset/cis-aws-foundations-benchmark/v/1.2.0\"",
			"  depends_on    = [aws_securityhub_account.example]",
			"}",
			"",
			"resource \"aws_securityhub_standards_control\" \"ensure_iam_password_policy_prevents_password_reuse\" {",
			"  standards_control_arn = \"arn:aws:securityhub:us-east-1:111111111111:control/cis-aws-foundations-benchmark/v/1.2.0/1.10\"",
			"  control_status        = \"DISABLED\"",
			"  disabled_reason       = \"We handle password policies within Okta\"",
			"",
			"  depends_on = [aws_securityhub_standards_subscription.cis_aws_foundations_benchmark]",
			"}"
		]
	},
	"securityhub_standards_subscription": {
		"prefix": "securityhub_standards_subscription",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/securityhub_standards_subscription",
			"resource \"aws_securityhub_account\" \"example\" {}",
			"",
			"data \"aws_region\" \"current\" {}",
			"",
			"resource \"aws_securityhub_standards_subscription\" \"cis\" {",
			"  depends_on    = [aws_securityhub_account.example]",
			"  standards_arn = \"arn:aws:securityhub:::ruleset/cis-aws-foundations-benchmark/v/1.2.0\"",
			"}",
			"",
			"resource \"aws_securityhub_standards_subscription\" \"pci_321\" {",
			"  depends_on    = [aws_securityhub_account.example]",
			"  standards_arn = \"arn:aws:securityhub:${data.aws_region.current.name}::standards/pci-dss/v/3.2.1\"",
			"}"
		]
	},
	"ses_active_receipt_rule_set": {
		"prefix": "ses_active_receipt_rule_set",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ses_active_receipt_rule_set",
			"resource \"aws_ses_active_receipt_rule_set\" \"main\" {",
			"  rule_set_name = \"primary-rules\"",
			"}"
		]
	},
	"ses_configuration_set": {
		"prefix": "ses_configuration_set",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ses_configuration_set",
			"resource \"aws_ses_configuration_set\" \"test\" {",
			"  name = \"some-configuration-set-test\"",
			"}"
		]
	},
	"ses_domain_dkim": {
		"prefix": "ses_domain_dkim",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ses_domain_dkim",
			"resource \"aws_ses_domain_identity\" \"example\" {",
			"  domain = \"example.com\"",
			"}",
			"",
			"resource \"aws_ses_domain_dkim\" \"example\" {",
			"  domain = aws_ses_domain_identity.example.domain",
			"}",
			"",
			"resource \"aws_route53_record\" \"example_amazonses_dkim_record\" {",
			"  count   = 3",
			"  zone_id = \"ABCDEFGHIJ123\"",
			"  name    = \"${aws_ses_domain_dkim.example.dkim_tokens[count.index]}._domainkey\"",
			"  type    = \"CNAME\"",
			"  ttl     = \"600\"",
			"  records = [\"${aws_ses_domain_dkim.example.dkim_tokens[count.index]}.dkim.amazonses.com\"]",
			"}"
		]
	},
	"ses_domain_identity": {
		"prefix": "ses_domain_identity",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ses_domain_identity",
			"resource \"aws_ses_domain_identity\" \"example\" {",
			"  domain = \"example.com\"",
			"}"
		]
	},
	"ses_domain_identity_verification": {
		"prefix": "ses_domain_identity_verification",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ses_domain_identity_verification",
			"resource \"aws_ses_domain_identity\" \"example\" {",
			"  domain = \"example.com\"",
			"}",
			"",
			"resource \"aws_route53_record\" \"example_amazonses_verification_record\" {",
			"  zone_id = aws_route53_zone.example.zone_id",
			"  name    = \"_amazonses.${aws_ses_domain_identity.example.id}\"",
			"  type    = \"TXT\"",
			"  ttl     = \"600\"",
			"  records = [aws_ses_domain_identity.example.verification_token]",
			"}",
			"",
			"resource \"aws_ses_domain_identity_verification\" \"example_verification\" {",
			"  domain = aws_ses_domain_identity.example.id",
			"",
			"  depends_on = [aws_route53_record.example_amazonses_verification_record]",
			"}"
		]
	},
	"ses_domain_mail_from": {
		"prefix": "ses_domain_mail_from",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ses_domain_mail_from",
			"resource \"aws_ses_domain_mail_from\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"ses_email_identity": {
		"prefix": "ses_email_identity",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ses_email_identity",
			"resource \"aws_ses_email_identity\" \"example\" {",
			"  email = \"email@example.com\"",
			"}"
		]
	},
	"ses_event_destination": {
		"prefix": "ses_event_destination",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ses_event_destination",
			"resource \"aws_ses_event_destination\" \"cloudwatch\" {",
			"  name                   = \"event-destination-cloudwatch\"",
			"  configuration_set_name = aws_ses_configuration_set.example.name",
			"  enabled                = true",
			"  matching_types         = [\"bounce\", \"send\"]",
			"",
			"  cloudwatch_destination {",
			"    default_value  = \"default\"",
			"    dimension_name = \"dimension\"",
			"    value_source   = \"emailHeader\"",
			"  }",
			"}"
		]
	},
	"ses_identity_notification_topic": {
		"prefix": "ses_identity_notification_topic",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ses_identity_notification_topic",
			"resource \"aws_ses_identity_notification_topic\" \"test\" {",
			"  topic_arn                = aws_sns_topic.example.arn",
			"  notification_type        = \"Bounce\"",
			"  identity                 = aws_ses_domain_identity.example.domain",
			"  include_original_headers = true",
			"}"
		]
	},
	"ses_identity_policy": {
		"prefix": "ses_identity_policy",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ses_identity_policy",
			"resource \"aws_ses_identity_policy\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"ses_receipt_filter": {
		"prefix": "ses_receipt_filter",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ses_receipt_filter",
			"resource \"aws_ses_receipt_filter\" \"filter\" {",
			"  name   = \"block-spammer\"",
			"  cidr   = \"10.10.10.10\"",
			"  policy = \"Block\"",
			"}"
		]
	},
	"ses_receipt_rule": {
		"prefix": "ses_receipt_rule",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ses_receipt_rule",
			"# Add a header to the email and store it in S3",
			"resource \"aws_ses_receipt_rule\" \"store\" {",
			"  name          = \"store\"",
			"  rule_set_name = \"default-rule-set\"",
			"  recipients    = [\"karen@example.com\"]",
			"  enabled       = true",
			"  scan_enabled  = true",
			"",
			"  add_header_action {",
			"    header_name  = \"Custom-Header\"",
			"    header_value = \"Added by SES\"",
			"    position     = 1",
			"  }",
			"",
			"  s3_action {",
			"    bucket_name = \"emails\"",
			"    position    = 2",
			"  }",
			"}"
		]
	},
	"ses_receipt_rule_set": {
		"prefix": "ses_receipt_rule_set",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ses_receipt_rule_set",
			"resource \"aws_ses_receipt_rule_set\" \"main\" {",
			"  rule_set_name = \"primary-rules\"",
			"}"
		]
	},
	"ses_template": {
		"prefix": "ses_template",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ses_template",
			"resource \"aws_ses_template\" \"MyTemplate\" {",
			"  name    = \"MyTemplate\"",
			"  subject = \"Greetings, {{name}}!\"",
			"  html    = \"<h1>Hello {{name}},</h1><p>Your favorite animal is {{favoriteanimal}}.</p>\"",
			"  text    = \"Hello {{name}},\r\nYour favorite animal is {{favoriteanimal}}.\"",
			"}"
		]
	},
	"sesv2_configuration_set": {
		"prefix": "sesv2_configuration_set",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/sesv2_configuration_set",
			"resource \"aws_sesv2_configuration_set\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"sesv2_configuration_set_event_destination": {
		"prefix": "sesv2_configuration_set_event_destination",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/sesv2_configuration_set_event_destination",
			"resource \"aws_sesv2_configuration_set_event_destination\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"sesv2_contact_list": {
		"prefix": "sesv2_contact_list",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/sesv2_contact_list",
			"resource \"aws_sesv2_contact_list\" \"example\" {",
			"  contact_list_name = \"example\"",
			"}"
		]
	},
	"sesv2_dedicated_ip_assignment": {
		"prefix": "sesv2_dedicated_ip_assignment",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/sesv2_dedicated_ip_assignment",
			"resource \"aws_sesv2_dedicated_ip_assignment\" \"example\" {",
			"  ip                    = \"0.0.0.0\"",
			"  destination_pool_name = \"my-pool\"",
			"}"
		]
	},
	"sesv2_dedicated_ip_pool": {
		"prefix": "sesv2_dedicated_ip_pool",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/sesv2_dedicated_ip_pool",
			"resource \"aws_sesv2_dedicated_ip_pool\" \"example\" {",
			"  pool_name = \"my-pool\"",
			"}"
		]
	},
	"sesv2_email_identity": {
		"prefix": "sesv2_email_identity",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/sesv2_email_identity",
			"resource \"aws_sesv2_email_identity\" \"example\" {",
			"  email_identity = \"testing@example.com\"",
			"}"
		]
	},
	"sesv2_email_identity_feedback_attributes": {
		"prefix": "sesv2_email_identity_feedback_attributes",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/sesv2_email_identity_feedback_attributes",
			"resource \"aws_sesv2_email_identity\" \"example\" {",
			"  email_identity = \"example.com\"",
			"}",
			"",
			"resource \"aws_sesv2_email_identity_feedback_attributes\" \"example\" {",
			"  email_identity           = aws_sesv2_email_identity.example.email_identity",
			"  email_forwarding_enabled = true",
			"}"
		]
	},
	"sesv2_email_identity_mail_from_attributes": {
		"prefix": "sesv2_email_identity_mail_from_attributes",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/sesv2_email_identity_mail_from_attributes",
			"resource \"aws_sesv2_email_identity\" \"example\" {",
			"  email_identity = \"example.com\"",
			"}",
			"",
			"resource \"aws_sesv2_email_identity_mail_from_attributes\" \"example\" {",
			"  email_identity = aws_sesv2_email_identity.example.email_identity",
			"",
			"  behavior_on_mx_failure = \"REJECT_MESSAGE\"",
			"  mail_from_domain       = \"subdomain.${aws_sesv2_email_identity.example.email_identity}\"",
			"}"
		]
	},
	"sqs_queue": {
		"prefix": "sqs_queue",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/sqs_queue",
			"resource \"aws_sqs_queue\" \"terraform_queue\" {",
			"  name                      = \"terraform-example-queue\"",
			"  delay_seconds             = 90",
			"  max_message_size          = 2048",
			"  message_retention_seconds = 86400",
			"  receive_wait_time_seconds = 10",
			"  redrive_policy = jsonencode({",
			"    deadLetterTargetArn = aws_sqs_queue.terraform_queue_deadletter.arn",
			"    maxReceiveCount     = 4",
			"  })",
			"",
			"  tags = {",
			"    Environment = \"production\"",
			"  }",
			"}"
		]
	},
	"sqs_queue_policy": {
		"prefix": "sqs_queue_policy",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/sqs_queue_policy",
			"resource \"aws_sqs_queue_policy\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"sqs_queue_redrive_allow_policy": {
		"prefix": "sqs_queue_redrive_allow_policy",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/sqs_queue_redrive_allow_policy",
			"resource \"aws_sqs_queue_redrive_allow_policy\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"sqs_queue_redrive_policy": {
		"prefix": "sqs_queue_redrive_policy",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/sqs_queue_redrive_policy",
			"resource \"aws_sqs_queue\" \"q\" {",
			"  name = \"examplequeue\"",
			"}",
			"",
			"resource \"aws_sqs_queue\" \"ddl\" {",
			"  name = \"examplequeue-ddl\"",
			"  redrive_allow_policy = jsonencode({",
			"    redrivePermission = \"byQueue\",",
			"    sourceQueueArns   = [aws_sqs_queue.q.arn]",
			"  })",
			"}",
			"",
			"resource \"aws_sqs_queue_redrive_policy\" \"q\" {",
			"  queue_url = aws_sqs_queue.q.id",
			"  redrive_policy = jsonencode({",
			"    deadLetterTargetArn = aws_sqs_queue.ddl.arn",
			"    maxReceiveCount     = 4",
			"  })",
			"}"
		]
	},
	"vpc": {
		"prefix": "vpc",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/vpc",
			"resource \"aws_vpc\" \"main\" {",
			"  cidr_block = \"10.0.0.0/16\"",
			"}"
		]
	},
	"vpc_dhcp_options": {
		"prefix": "vpc_dhcp_options",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/vpc_dhcp_options",
			"resource \"aws_vpc_dhcp_options\" \"dns_resolver\" {",
			"  domain_name_servers = [\"8.8.8.8\", \"8.8.4.4\"]",
			"}"
		]
	},
	"vpc_dhcp_options_association": {
		"prefix": "vpc_dhcp_options_association",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/vpc_dhcp_options_association",
			"resource \"aws_vpc_dhcp_options_association\" \"dns_resolver\" {",
			"  vpc_id          = aws_vpc.foo.id",
			"  dhcp_options_id = aws_vpc_dhcp_options.foo.id",
			"}"
		]
	},
	"vpc_endpoint": {
		"prefix": "vpc_endpoint",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/vpc_endpoint",
			"resource \"aws_vpc_endpoint\" \"s3\" {",
			"  vpc_id       = aws_vpc.main.id",
			"  service_name = \"com.amazonaws.us-west-2.s3\"",
			"}"
		]
	},
	"vpc_endpoint_connection_accepter": {
		"prefix": "vpc_endpoint_connection_accepter",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/vpc_endpoint_connection_accepter",
			"resource \"aws_vpc_endpoint_connection_accepter\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"vpc_endpoint_connection_notification": {
		"prefix": "vpc_endpoint_connection_notification",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/vpc_endpoint_connection_notification",
			"resource \"aws_vpc_endpoint_connection_notification\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"vpc_endpoint_policy": {
		"prefix": "vpc_endpoint_policy",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/vpc_endpoint_policy",
			"resource \"aws_vpc_endpoint_policy\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"vpc_endpoint_route_table_association": {
		"prefix": "vpc_endpoint_route_table_association",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/vpc_endpoint_route_table_association",
			"resource \"aws_vpc_endpoint_route_table_association\" \"example\" {",
			"  route_table_id  = aws_route_table.example.id",
			"  vpc_endpoint_id = aws_vpc_endpoint.example.id",
			"}"
		]
	},
	"vpc_endpoint_security_group_association": {
		"prefix": "vpc_endpoint_security_group_association",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/vpc_endpoint_security_group_association",
			"resource \"aws_vpc_endpoint_security_group_association\" \"sg_ec2\" {",
			"  vpc_endpoint_id   = aws_vpc_endpoint.ec2.id",
			"  security_group_id = aws_security_group.sg.id",
			"}"
		]
	},
	"vpc_endpoint_service": {
		"prefix": "vpc_endpoint_service",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/vpc_endpoint_service",
			"resource \"aws_vpc_endpoint_service\" \"example\" {",
			"  acceptance_required        = false",
			"  network_load_balancer_arns = [aws_lb.example.arn]",
			"}"
		]
	},
	"vpc_endpoint_service_allowed_principal": {
		"prefix": "vpc_endpoint_service_allowed_principal",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/vpc_endpoint_service_allowed_principal",
			"data \"aws_caller_identity\" \"current\" {}",
			"",
			"resource \"aws_vpc_endpoint_service_allowed_principal\" \"allow_me_to_foo\" {",
			"  vpc_endpoint_service_id = aws_vpc_endpoint_service.foo.id",
			"  principal_arn           = data.aws_caller_identity.current.arn",
			"}"
		]
	},
	"vpc_endpoint_subnet_association": {
		"prefix": "vpc_endpoint_subnet_association",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/vpc_endpoint_subnet_association",
			"resource \"aws_vpc_endpoint_subnet_association\" \"sn_ec2\" {",
			"  vpc_endpoint_id = aws_vpc_endpoint.ec2.id",
			"  subnet_id       = aws_subnet.sn.id",
			"}"
		]
	},
	"vpc_ipam": {
		"prefix": "vpc_ipam",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/vpc_ipam",
			"data \"aws_region\" \"current\" {}",
			"",
			"resource \"aws_vpc_ipam\" \"main\" {",
			"  description = \"My IPAM\"",
			"  operating_regions {",
			"    region_name = data.aws_region.current.name",
			"  }",
			"",
			"  tags = {",
			"    Test = \"Main\"",
			"  }",
			"}"
		]
	},
	"vpc_ipam_organization_admin_account": {
		"prefix": "vpc_ipam_organization_admin_account",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/vpc_ipam_organization_admin_account",
			"resource \"aws_vpc_ipam_organization_admin_account\" \"example\" {",
			"  delegated_admin_account_id = data.aws_caller_identity.delegated.account_id",
			"}",
			"",
			"data \"aws_caller_identity\" \"delegated\" {",
			"  provider = aws.ipam_delegate_account",
			"}",
			"",
			"provider \"aws\" {",
			"  alias = \"ipam_delegate_account\"",
			"",
			"  # authentication arguments omitted",
			"}"
		]
	},
	"vpc_ipam_pool": {
		"prefix": "vpc_ipam_pool",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/vpc_ipam_pool",
			"data \"aws_region\" \"current\" {}",
			"",
			"resource \"aws_vpc_ipam\" \"example\" {",
			"  operating_regions {",
			"    region_name = data.aws_region.current.name",
			"  }",
			"}",
			"",
			"resource \"aws_vpc_ipam_pool\" \"example\" {",
			"  address_family = \"ipv4\"",
			"  ipam_scope_id  = aws_vpc_ipam.example.private_default_scope_id",
			"  locale         = data.aws_region.current.name",
			"}"
		]
	},
	"vpc_ipam_pool_cidr": {
		"prefix": "vpc_ipam_pool_cidr",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/vpc_ipam_pool_cidr",
			"data \"aws_region\" \"current\" {}",
			"",
			"resource \"aws_vpc_ipam\" \"example\" {",
			"  operating_regions {",
			"    region_name = data.aws_region.current.name",
			"  }",
			"}",
			"",
			"resource \"aws_vpc_ipam_pool\" \"example\" {",
			"  address_family = \"ipv4\"",
			"  ipam_scope_id  = aws_vpc_ipam.example.private_default_scope_id",
			"  locale         = data.aws_region.current.name",
			"}",
			"",
			"resource \"aws_vpc_ipam_pool_cidr\" \"example\" {",
			"  ipam_pool_id = aws_vpc_ipam_pool.example.id",
			"  cidr         = \"172.20.0.0/16\"",
			"}"
		]
	},
	"vpc_ipam_pool_cidr_allocation": {
		"prefix": "vpc_ipam_pool_cidr_allocation",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/vpc_ipam_pool_cidr_allocation",
			"resource \"aws_vpc_ipam_pool_cidr_allocation\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"vpc_ipam_preview_next_cidr": {
		"prefix": "vpc_ipam_preview_next_cidr",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/vpc_ipam_preview_next_cidr",
			"resource \"aws_vpc_ipam_preview_next_cidr\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"vpc_ipam_resource_discovery": {
		"prefix": "vpc_ipam_resource_discovery",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/vpc_ipam_resource_discovery",
			"data \"aws_region\" \"current\" {}",
			"",
			"resource \"aws_vpc_ipam_resource_discovery\" \"main\" {",
			"  description = \"My IPAM Resource Discovery\"",
			"  operating_regions {",
			"    region_name = data.aws_region.current.name",
			"  }",
			"",
			"  tags = {",
			"    Test = \"Main\"",
			"  }",
			"}"
		]
	},
	"vpc_ipam_resource_discovery_association": {
		"prefix": "vpc_ipam_resource_discovery_association",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/vpc_ipam_resource_discovery_association",
			"resource \"aws_vpc_ipam_resource_discovery_association\" \"test\" {",
			"  ipam_id                    = aws_vpc_ipam.test.id",
			"  ipam_resource_discovery_id = aws_vpc_ipam_resource_discovery.test.id",
			"",
			"  tags = {",
			"    \"Name\" = \"test\"",
			"  }",
			"}"
		]
	},
	"vpc_ipam_scope": {
		"prefix": "vpc_ipam_scope",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/vpc_ipam_scope",
			"data \"aws_region\" \"current\" {}",
			"",
			"resource \"aws_vpc_ipam\" \"example\" {",
			"  operating_regions {",
			"    region_name = data.aws_region.current.name",
			"  }",
			"}",
			"",
			"resource \"aws_vpc_ipam_scope\" \"example\" {",
			"  ipam_id     = aws_vpc_ipam.example.id",
			"  description = \"Another Scope\"",
			"}"
		]
	},
	"vpc_ipv4_cidr_block_association": {
		"prefix": "vpc_ipv4_cidr_block_association",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/vpc_ipv4_cidr_block_association",
			"resource \"aws_vpc\" \"main\" {",
			"  cidr_block = \"10.0.0.0/16\"",
			"}",
			"",
			"resource \"aws_vpc_ipv4_cidr_block_association\" \"secondary_cidr\" {",
			"  vpc_id     = aws_vpc.main.id",
			"  cidr_block = \"172.20.0.0/16\"",
			"}"
		]
	},
	"vpc_ipv6_cidr_block_association": {
		"prefix": "vpc_ipv6_cidr_block_association",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/vpc_ipv6_cidr_block_association",
			"resource \"aws_vpc\" \"test\" {",
			"  cidr_block = \"10.0.0.0/16\"",
			"}",
			"",
			"resource \"aws_vpc_ipv6_cidr_block_association\" \"test\" {",
			"  ipv6_ipam_pool_id = aws_vpc_ipam_pool.test.id",
			"  vpc_id            = aws_vpc.test.id",
			"}"
		]
	},
	"vpc_network_performance_metric_subscription": {
		"prefix": "vpc_network_performance_metric_subscription",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/vpc_network_performance_metric_subscription",
			"resource \"aws_vpc_network_performance_metric_subscription\" \"example\" {",
			"  source      = \"us-east-1\"",
			"  destination = \"us-west-1\"",
			"}"
		]
	},
	"vpc_peering_connection": {
		"prefix": "vpc_peering_connection",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/vpc_peering_connection",
			"resource \"aws_vpc_peering_connection\" \"foo\" {",
			"  peer_owner_id = var.peer_owner_id",
			"  peer_vpc_id   = aws_vpc.bar.id",
			"  vpc_id        = aws_vpc.foo.id",
			"}"
		]
	},
	"vpc_peering_connection_accepter": {
		"prefix": "vpc_peering_connection_accepter",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/vpc_peering_connection_accepter",
			"resource \"aws_vpc_peering_connection_accepter\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"vpc_peering_connection_options": {
		"prefix": "vpc_peering_connection_options",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/vpc_peering_connection_options",
			"resource \"aws_vpc_peering_connection_options\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"vpc_security_group_egress_rule": {
		"prefix": "vpc_security_group_egress_rule",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/vpc_security_group_egress_rule",
			"resource \"aws_vpc_security_group_egress_rule\" \"example\" {",
			"  security_group_id = aws_security_group.example.id",
			"",
			"  cidr_ipv4   = \"10.0.0.0/8\"",
			"  from_port   = 80",
			"  ip_protocol = \"tcp\"",
			"  to_port     = 80",
			"}"
		]
	},
	"vpc_security_group_ingress_rule": {
		"prefix": "vpc_security_group_ingress_rule",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/vpc_security_group_ingress_rule",
			"resource \"aws_vpc_security_group_ingress_rule\" \"example\" {",
			"  security_group_id = aws_security_group.example.id",
			"",
			"  cidr_ipv4   = \"10.0.0.0/8\"",
			"  from_port   = 80",
			"  ip_protocol = \"tcp\"",
			"  to_port     = 80",
			"}"
		]
	},
	"vpclattice_access_log_subscription": {
		"prefix": "vpclattice_access_log_subscription",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/vpclattice_access_log_subscription",
			"resource \"aws_vpclattice_access_log_subscription\" \"example\" {",
			"  resource_identifier = aws_vpclattice_service_network.example.id",
			"  destination_arn     = aws_s3.bucket.arn",
			"}"
		]
	},
	"vpclattice_auth_policy": {
		"prefix": "vpclattice_auth_policy",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/vpclattice_auth_policy",
			"resource \"aws_vpclattice_auth_policy\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"vpclattice_listener": {
		"prefix": "vpclattice_listener",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/vpclattice_listener",
			"resource \"aws_vpclattice_service\" \"test\" {",
			"  name = %[1]q",
			"}",
			"",
			"resource \"aws_vpclattice_listener\" \"test\" {",
			"  name               = %[1]q",
			"  protocol           = \"HTTPS\"",
			"  service_identifier = aws_vpclattice_service.test.id",
			"  default_action {",
			"    fixed_response {",
			"      status_code = 404",
			"    }",
			"  }",
			"}"
		]
	},
	"vpclattice_listener_rule": {
		"prefix": "vpclattice_listener_rule",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/vpclattice_listener_rule",
			"resource \"aws_vpclattice_listener_rule\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"vpclattice_resource_policy": {
		"prefix": "vpclattice_resource_policy",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/vpclattice_resource_policy",
			"resource \"aws_vpclattice_resource_policy\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"vpclattice_service": {
		"prefix": "vpclattice_service",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/vpclattice_service",
			"resource \"aws_vpclattice_service\" \"example\" {",
			"  name               = \"example\"",
			"  auth_type          = \"AWS_IAM\"",
			"  custom_domain_name = \"example.com\"",
			"}"
		]
	},
	"vpclattice_service_network": {
		"prefix": "vpclattice_service_network",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/vpclattice_service_network",
			"resource \"aws_vpclattice_service_network\" \"example\" {",
			"  name      = \"example\"",
			"  auth_type = \"AWS_IAM\"",
			"}"
		]
	},
	"vpclattice_service_network_service_association": {
		"prefix": "vpclattice_service_network_service_association",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/vpclattice_service_network_service_association",
			"resource \"aws_vpclattice_service_network_service_association\" \"example\" {",
			"  service_identifier         = aws_vpclattice_service.example.id",
			"  service_network_identifier = aws_vpclattice_service_network.example.id",
			"}"
		]
	},
	"vpclattice_service_network_vpc_association": {
		"prefix": "vpclattice_service_network_vpc_association",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/vpclattice_service_network_vpc_association",
			"resource \"aws_vpclattice_service_network_vpc_association\" \"example\" {",
			"  vpc_identifier             = aws_vpc.example.id",
			"  service_network_identifier = aws_vpclattice_service_network.example.id",
			"  security_group_ids         = [aws_security_group.example.id]",
			"}"
		]
	},
	"vpclattice_target_group": {
		"prefix": "vpclattice_target_group",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/vpclattice_target_group",
			"resource \"aws_vpclattice_target_group\" \"example\" {",
			"  name = \"example\"",
			"  type = \"INSTANCE\"",
			"  config {",
			"    port           = 443",
			"    protocol       = \"HTTPS\"",
			"    vpc_identifier = aws_vpc.example.id",
			"  }",
			"}"
		]
	},
	"vpclattice_target_group_attachment": {
		"prefix": "vpclattice_target_group_attachment",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/vpclattice_target_group_attachment",
			"resource \"aws_vpclattice_target_group_attachment\" \"example\" {",
			"  target_group_identifier = aws_vpclattice_target_group.example.id",
			"",
			"  target {",
			"    id   = aws_lb.example.arn",
			"    port = 80",
			"  }",
			"}"
		]
	},
	"waf_byte_match_set": {
		"prefix": "waf_byte_match_set",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/waf_byte_match_set",
			"resource \"aws_waf_byte_match_set\" \"byte_set\" {",
			"  name = \"tf_waf_byte_match_set\"",
			"",
			"  byte_match_tuples {",
			"    text_transformation   = \"NONE\"",
			"    target_string         = \"badrefer1\"",
			"    positional_constraint = \"CONTAINS\"",
			"",
			"    field_to_match {",
			"      type = \"HEADER\"",
			"      data = \"referer\"",
			"    }",
			"  }",
			"}"
		]
	},
	"waf_geo_match_set": {
		"prefix": "waf_geo_match_set",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/waf_geo_match_set",
			"resource \"aws_waf_geo_match_set\" \"geo_match_set\" {",
			"  name = \"geo_match_set\"",
			"",
			"  geo_match_constraint {",
			"    type  = \"Country\"",
			"    value = \"US\"",
			"  }",
			"",
			"  geo_match_constraint {",
			"    type  = \"Country\"",
			"    value = \"CA\"",
			"  }",
			"}"
		]
	},
	"waf_ipset": {
		"prefix": "waf_ipset",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/waf_ipset",
			"resource \"aws_waf_ipset\" \"ipset\" {",
			"  name = \"tfIPSet\"",
			"",
			"  ip_set_descriptors {",
			"    type  = \"IPV4\"",
			"    value = \"192.0.7.0/24\"",
			"  }",
			"",
			"  ip_set_descriptors {",
			"    type  = \"IPV4\"",
			"    value = \"10.16.16.0/16\"",
			"  }",
			"}"
		]
	},
	"waf_rate_based_rule": {
		"prefix": "waf_rate_based_rule",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/waf_rate_based_rule",
			"resource \"aws_waf_rate_based_rule\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"waf_regex_match_set": {
		"prefix": "waf_regex_match_set",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/waf_regex_match_set",
			"resource \"aws_waf_regex_match_set\" \"example\" {",
			"  name = \"example\"",
			"",
			"  regex_match_tuple {",
			"    field_to_match {",
			"      data = \"User-Agent\"",
			"      type = \"HEADER\"",
			"    }",
			"",
			"    regex_pattern_set_id = aws_waf_regex_pattern_set.example.id",
			"    text_transformation  = \"NONE\"",
			"  }",
			"}",
			"",
			"resource \"aws_waf_regex_pattern_set\" \"example\" {",
			"  name                  = \"example\"",
			"  regex_pattern_strings = [\"one\", \"two\"]",
			"}"
		]
	},
	"waf_regex_pattern_set": {
		"prefix": "waf_regex_pattern_set",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/waf_regex_pattern_set",
			"resource \"aws_waf_regex_pattern_set\" \"example\" {",
			"  name                  = \"tf_waf_regex_pattern_set\"",
			"  regex_pattern_strings = [\"one\", \"two\"]",
			"}"
		]
	},
	"waf_rule": {
		"prefix": "waf_rule",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/waf_rule",
			"resource \"aws_waf_rule\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"waf_rule_group": {
		"prefix": "waf_rule_group",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/waf_rule_group",
			"resource \"aws_waf_rule\" \"example\" {",
			"  name        = \"example\"",
			"  metric_name = \"example\"",
			"}",
			"",
			"resource \"aws_waf_rule_group\" \"example\" {",
			"  name        = \"example\"",
			"  metric_name = \"example\"",
			"",
			"  activated_rule {",
			"    action {",
			"      type = \"COUNT\"",
			"    }",
			"",
			"    priority = 50",
			"    rule_id  = aws_waf_rule.example.id",
			"  }",
			"}"
		]
	},
	"waf_size_constraint_set": {
		"prefix": "waf_size_constraint_set",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/waf_size_constraint_set",
			"resource \"aws_waf_size_constraint_set\" \"size_constraint_set\" {",
			"  name = \"tfsize_constraints\"",
			"",
			"  size_constraints {",
			"    text_transformation = \"NONE\"",
			"    comparison_operator = \"EQ\"",
			"    size                = \"4096\"",
			"",
			"    field_to_match {",
			"      type = \"BODY\"",
			"    }",
			"  }",
			"}"
		]
	},
	"waf_sql_injection_match_set": {
		"prefix": "waf_sql_injection_match_set",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/waf_sql_injection_match_set",
			"resource \"aws_waf_sql_injection_match_set\" \"sql_injection_match_set\" {",
			"  name = \"tf-sql_injection_match_set\"",
			"",
			"  sql_injection_match_tuples {",
			"    text_transformation = \"URL_DECODE\"",
			"",
			"    field_to_match {",
			"      type = \"QUERY_STRING\"",
			"    }",
			"  }",
			"}"
		]
	},
	"waf_web_acl": {
		"prefix": "waf_web_acl",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/waf_web_acl",
			"resource \"aws_waf_web_acl\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"waf_xss_match_set": {
		"prefix": "waf_xss_match_set",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/waf_xss_match_set",
			"resource \"aws_waf_xss_match_set\" \"xss_match_set\" {",
			"  name = \"xss_match_set\"",
			"",
			"  xss_match_tuples {",
			"    text_transformation = \"NONE\"",
			"",
			"    field_to_match {",
			"      type = \"URI\"",
			"    }",
			"  }",
			"",
			"  xss_match_tuples {",
			"    text_transformation = \"NONE\"",
			"",
			"    field_to_match {",
			"      type = \"QUERY_STRING\"",
			"    }",
			"  }",
			"}"
		]
	},
	"wafregional_byte_match_set": {
		"prefix": "wafregional_byte_match_set",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/wafregional_byte_match_set",
			"resource \"aws_wafregional_byte_match_set\" \"byte_set\" {",
			"  name = \"tf_waf_byte_match_set\"",
			"",
			"  byte_match_tuples {",
			"    text_transformation   = \"NONE\"",
			"    target_string         = \"badrefer1\"",
			"    positional_constraint = \"CONTAINS\"",
			"",
			"    field_to_match {",
			"      type = \"HEADER\"",
			"      data = \"referer\"",
			"    }",
			"  }",
			"}"
		]
	},
	"wafregional_geo_match_set": {
		"prefix": "wafregional_geo_match_set",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/wafregional_geo_match_set",
			"resource \"aws_wafregional_geo_match_set\" \"geo_match_set\" {",
			"  name = \"geo_match_set\"",
			"",
			"  geo_match_constraint {",
			"    type  = \"Country\"",
			"    value = \"US\"",
			"  }",
			"",
			"  geo_match_constraint {",
			"    type  = \"Country\"",
			"    value = \"CA\"",
			"  }",
			"}"
		]
	},
	"wafregional_ipset": {
		"prefix": "wafregional_ipset",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/wafregional_ipset",
			"resource \"aws_wafregional_ipset\" \"ipset\" {",
			"  name = \"tfIPSet\"",
			"",
			"  ip_set_descriptor {",
			"    type  = \"IPV4\"",
			"    value = \"192.0.7.0/24\"",
			"  }",
			"",
			"  ip_set_descriptor {",
			"    type  = \"IPV4\"",
			"    value = \"10.16.16.0/16\"",
			"  }",
			"}"
		]
	},
	"wafregional_rate_based_rule": {
		"prefix": "wafregional_rate_based_rule",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/wafregional_rate_based_rule",
			"resource \"aws_wafregional_rate_based_rule\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"wafregional_regex_match_set": {
		"prefix": "wafregional_regex_match_set",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/wafregional_regex_match_set",
			"resource \"aws_wafregional_regex_match_set\" \"example\" {",
			"  name = \"example\"",
			"",
			"  regex_match_tuple {",
			"    field_to_match {",
			"      data = \"User-Agent\"",
			"      type = \"HEADER\"",
			"    }",
			"",
			"    regex_pattern_set_id = aws_wafregional_regex_pattern_set.example.id",
			"    text_transformation  = \"NONE\"",
			"  }",
			"}",
			"",
			"resource \"aws_wafregional_regex_pattern_set\" \"example\" {",
			"  name                  = \"example\"",
			"  regex_pattern_strings = [\"one\", \"two\"]",
			"}"
		]
	},
	"wafregional_regex_pattern_set": {
		"prefix": "wafregional_regex_pattern_set",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/wafregional_regex_pattern_set",
			"resource \"aws_wafregional_regex_pattern_set\" \"example\" {",
			"  name                  = \"example\"",
			"  regex_pattern_strings = [\"one\", \"two\"]",
			"}"
		]
	},
	"wafregional_rule": {
		"prefix": "wafregional_rule",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/wafregional_rule",
			"resource \"aws_wafregional_ipset\" \"ipset\" {",
			"  name = \"tfIPSet\"",
			"",
			"  ip_set_descriptor {",
			"    type  = \"IPV4\"",
			"    value = \"192.0.7.0/24\"",
			"  }",
			"}",
			"",
			"resource \"aws_wafregional_rule\" \"wafrule\" {",
			"  name        = \"tfWAFRule\"",
			"  metric_name = \"tfWAFRule\"",
			"",
			"  predicate {",
			"    type    = \"IPMatch\"",
			"    data_id = aws_wafregional_ipset.ipset.id",
			"    negated = false",
			"  }",
			"}"
		]
	},
	"wafregional_rule_group": {
		"prefix": "wafregional_rule_group",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/wafregional_rule_group",
			"resource \"aws_wafregional_rule\" \"example\" {",
			"  name        = \"example\"",
			"  metric_name = \"example\"",
			"}",
			"",
			"resource \"aws_wafregional_rule_group\" \"example\" {",
			"  name        = \"example\"",
			"  metric_name = \"example\"",
			"",
			"  activated_rule {",
			"    action {",
			"      type = \"COUNT\"",
			"    }",
			"",
			"    priority = 50",
			"    rule_id  = aws_wafregional_rule.example.id",
			"  }",
			"}"
		]
	},
	"wafregional_size_constraint_set": {
		"prefix": "wafregional_size_constraint_set",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/wafregional_size_constraint_set",
			"resource \"aws_wafregional_size_constraint_set\" \"size_constraint_set\" {",
			"  name = \"tfsize_constraints\"",
			"",
			"  size_constraints {",
			"    text_transformation = \"NONE\"",
			"    comparison_operator = \"EQ\"",
			"    size                = \"4096\"",
			"",
			"    field_to_match {",
			"      type = \"BODY\"",
			"    }",
			"  }",
			"}"
		]
	},
	"wafregional_sql_injection_match_set": {
		"prefix": "wafregional_sql_injection_match_set",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/wafregional_sql_injection_match_set",
			"resource \"aws_wafregional_sql_injection_match_set\" \"sql_injection_match_set\" {",
			"  name = \"tf-sql_injection_match_set\"",
			"",
			"  sql_injection_match_tuple {",
			"    text_transformation = \"URL_DECODE\"",
			"",
			"    field_to_match {",
			"      type = \"QUERY_STRING\"",
			"    }",
			"  }",
			"}"
		]
	},
	"wafregional_web_acl": {
		"prefix": "wafregional_web_acl",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/wafregional_web_acl",
			"resource \"aws_wafregional_web_acl\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"wafregional_web_acl_association": {
		"prefix": "wafregional_web_acl_association",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/wafregional_web_acl_association",
			"resource \"aws_wafregional_web_acl_association\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"wafregional_xss_match_set": {
		"prefix": "wafregional_xss_match_set",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/wafregional_xss_match_set",
			"resource \"aws_wafregional_xss_match_set\" \"xss_match_set\" {",
			"  name = \"xss_match_set\"",
			"",
			"  xss_match_tuple {",
			"    text_transformation = \"NONE\"",
			"",
			"    field_to_match {",
			"      type = \"URI\"",
			"    }",
			"  }",
			"",
			"  xss_match_tuple {",
			"    text_transformation = \"NONE\"",
			"",
			"    field_to_match {",
			"      type = \"QUERY_STRING\"",
			"    }",
			"  }",
			"}"
		]
	},
	"wafv2_ip_set": {
		"prefix": "wafv2_ip_set",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/wafv2_ip_set",
			"resource \"aws_wafv2_ip_set\" \"example\" {",
			"  name               = \"example\"",
			"  description        = \"Example IP set\"",
			"  scope              = \"REGIONAL\"",
			"  ip_address_version = \"IPV4\"",
			"  addresses          = [\"1.2.3.4/32\", \"5.6.7.8/32\"]",
			"",
			"  tags = {",
			"    Tag1 = \"Value1\"",
			"    Tag2 = \"Value2\"",
			"  }",
			"}"
		]
	},
	"wafv2_regex_pattern_set": {
		"prefix": "wafv2_regex_pattern_set",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/wafv2_regex_pattern_set",
			"resource \"aws_wafv2_regex_pattern_set\" \"example\" {",
			"  name        = \"example\"",
			"  description = \"Example regex pattern set\"",
			"  scope       = \"REGIONAL\"",
			"",
			"  regular_expression {",
			"    regex_string = \"one\"",
			"  }",
			"",
			"  regular_expression {",
			"    regex_string = \"two\"",
			"  }",
			"",
			"  tags = {",
			"    Tag1 = \"Value1\"",
			"    Tag2 = \"Value2\"",
			"  }",
			"}"
		]
	},
	"wafv2_rule_group": {
		"prefix": "wafv2_rule_group",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/wafv2_rule_group",
			"resource \"aws_wafv2_rule_group\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"wafv2_web_acl": {
		"prefix": "wafv2_web_acl",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/wafv2_web_acl",
			"resource \"aws_wafv2_web_acl\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"wafv2_web_acl_association": {
		"prefix": "wafv2_web_acl_association",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/wafv2_web_acl_association",
			"resource \"aws_wafv2_web_acl_association\" \"\" {",
			"	snippet too long. see doc link above.",
			"}"
		]
	},
	"wafv2_web_acl_logging_configuration": {
		"prefix": "wafv2_web_acl_logging_configuration",
		"body": [
			"# https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/wafv2_web_acl_logging_configuration",
			"resource \"aws_wafv2_web_acl_logging_configuration\" \"example\" {",
			"  log_destination_configs = [aws_kinesis_firehose_delivery_stream.example.arn]",
			"  resource_arn            = aws_wafv2_web_acl.example.arn",
			"  redacted_fields {",
			"    single_header {",
			"      name = \"user-agent\"",
			"    }",
			"  }",
			"}"
		]
	}
}